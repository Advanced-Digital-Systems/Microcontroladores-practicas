

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Mon Sep 07 17:25:32 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	text14,global,reloc=2,class=CODE,delta=1
    23                           	psect	text15,global,reloc=2,class=CODE,delta=1
    24                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    25                           	psect	text17,global,reloc=2,class=CODE,delta=1
    26                           	psect	text18,global,reloc=2,class=CODE,delta=1
    27                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    30                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    31                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    33  0000                     
    34                           ; Version 2.20
    35                           ; Generated 05/05/2020 GMT
    36                           ; 
    37                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC18F45K50 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68  0000                     
    69                           	psect	nvCOMRAM
    70  000010                     __pnvCOMRAM:
    71                           	callstack 0
    72  000010                     _timer0ReloadVal:
    73                           	callstack 0
    74  000010                     	ds	2
    75  000012                     _TMR0_InterruptHandler:
    76                           	callstack 0
    77  000012                     	ds	2
    78  0000                     _ANSELA	set	3931
    79  0000                     _ANSELE	set	3935
    80  0000                     _ANSELB	set	3932
    81  0000                     _ANSELC	set	3933
    82  0000                     _ANSELD	set	3934
    83  0000                     _RCONbits	set	4048
    84  0000                     _PORTD	set	3971
    85  0000                     _PORTB	set	3969
    86  0000                     _PORTCbits	set	3970
    87  0000                     _INTCON2bits	set	4081
    88  0000                     _WPUB	set	3973
    89  0000                     _TRISD	set	3989
    90  0000                     _TRISC	set	3988
    91  0000                     _TRISB	set	3987
    92  0000                     _TRISA	set	3986
    93  0000                     _TRISE	set	3990
    94  0000                     _LATC	set	3979
    95  0000                     _LATB	set	3978
    96  0000                     _LATA	set	3977
    97  0000                     _LATD	set	3980
    98  0000                     _LATE	set	3981
    99  0000                     _ACTCON	set	4021
   100  0000                     _OSCTUNE	set	3995
   101  0000                     _OSCCON2	set	4050
   102  0000                     _OSCCON	set	4051
   103  0000                     _T0CON	set	4053
   104  0000                     _INTCONbits	set	4082
   105  0000                     _TMR0L	set	4054
   106  0000                     _TMR0H	set	4055
   107  0000                     _T0CONbits	set	4053
   108                           
   109                           ; #config settings
   110                           
   111                           	psect	cinit
   112  00039A                     __pcinit:
   113                           	callstack 0
   114  00039A                     start_initialization:
   115                           	callstack 0
   116  00039A                     __initialization:
   117                           	callstack 0
   118  00039A                     end_of_initialization:
   119                           	callstack 0
   120  00039A                     __end_of__initialization:
   121                           	callstack 0
   122  00039A  9014               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   123  00039C  9214               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   124  00039E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   125  0003A0  6EF8               	movwf	tblptru,c
   126  0003A2  0100               	movlb	0
   127  0003A4  EF1E  F001         	goto	_main	;jump to C main() function
   128                           
   129                           	psect	cstackCOMRAM
   130  000001                     __pcstackCOMRAM:
   131                           	callstack 0
   132  000001                     ??_INTERRUPT_InterruptManager:
   133                           
   134                           ; 1 bytes @ 0x0
   135  000001                     	ds	2
   136  000003                     ?_TMR0_ReadTimer:
   137                           	callstack 0
   138  000003                     TMR0_SetInterruptHandler@InterruptHandler:
   139                           	callstack 0
   140  000003                     prender_num@num:
   141                           	callstack 0
   142  000003                     prender_num_2@num:
   143                           	callstack 0
   144                           
   145                           ; 2 bytes @ 0x2
   146  000003                     	ds	2
   147  000005                     ??_prender_num_2:
   148  000005                     ??_prender_num:
   149  000005                     ??_TMR0_Initialize:
   150  000005                     ??_TMR0_ReadTimer:
   151                           
   152                           ; 1 bytes @ 0x4
   153  000005                     	ds	2
   154  000007                     TMR0_ReadTimer@readVal:
   155                           	callstack 0
   156                           
   157                           ; 2 bytes @ 0x6
   158  000007                     	ds	2
   159  000009                     TMR0_ReadTimer@readValLow:
   160                           	callstack 0
   161                           
   162                           ; 1 bytes @ 0x8
   163  000009                     	ds	1
   164  00000A                     TMR0_ReadTimer@readValHigh:
   165                           	callstack 0
   166                           
   167                           ; 1 bytes @ 0x9
   168  00000A                     	ds	1
   169  00000B                     
   170                           ; 1 bytes @ 0xA
   171  00000B                     	ds	1
   172  00000C                     start_contador@j:
   173                           	callstack 0
   174                           
   175                           ; 2 bytes @ 0xB
   176  00000C                     	ds	2
   177  00000E                     start_contador@i:
   178                           	callstack 0
   179                           
   180                           ; 2 bytes @ 0xD
   181  00000E                     	ds	2
   182  000010                     
   183                           ; 1 bytes @ 0xF
   184 ;;
   185 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   186 ;;
   187 ;; *************** function _main *****************
   188 ;; Defined at:
   189 ;;		line 57 in file "main.c"
   190 ;; Parameters:    Size  Location     Type
   191 ;;		None
   192 ;; Auto vars:     Size  Location     Type
   193 ;;		None
   194 ;; Return value:  Size  Location     Type
   195 ;;                  1    wreg      void 
   196 ;; Registers used:
   197 ;;		wreg, status,2, status,0, cstack
   198 ;; Tracked objects:
   199 ;;		On entry : 0/0
   200 ;;		On exit  : 0/0
   201 ;;		Unchanged: 0/0
   202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   203 ;;      Params:         0       0       0       0       0       0       0       0       0
   204 ;;      Locals:         0       0       0       0       0       0       0       0       0
   205 ;;      Temps:          0       0       0       0       0       0       0       0       0
   206 ;;      Totals:         0       0       0       0       0       0       0       0       0
   207 ;;Total ram usage:        0 bytes
   208 ;; Hardware stack levels required when called:    8
   209 ;; This function calls:
   210 ;;		_SYSTEM_Initialize
   211 ;;		_reset_contador
   212 ;;		_start_contador
   213 ;;		_stop_contador
   214 ;; This function is called by:
   215 ;;		Startup code after reset
   216 ;; This function uses a non-reentrant model
   217 ;;
   218                           
   219                           	psect	text0
   220  00023C                     __ptext0:
   221                           	callstack 0
   222  00023C                     _main:
   223                           	callstack 23
   224  00023C                     
   225                           ;main.c: 60:     SYSTEM_Initialize();
   226  00023C  ECBB  F001         	call	_SYSTEM_Initialize	;wreg free
   227  000240                     l1261:
   228                           
   229                           ;main.c: 79:     {;main.c: 80:         if(PORTCbits.RC1 == 1)
   230  000240  A282               	btfss	130,1,c	;volatile
   231  000242  EF25  F001         	goto	u141
   232  000246  EF27  F001         	goto	u140
   233  00024A                     u141:
   234  00024A  EF2B  F001         	goto	l142
   235  00024E                     u140:
   236  00024E                     
   237                           ;main.c: 81:         {;main.c: 82:             reset_contador();
   238  00024E  ECD4  F001         	call	_reset_contador	;wreg free
   239                           
   240                           ;main.c: 83:         }
   241  000252  EF38  F001         	goto	l1269
   242  000256                     l142:
   243  000256  A482               	btfss	130,2,c	;volatile
   244  000258  EF30  F001         	goto	u151
   245  00025C  EF32  F001         	goto	u150
   246  000260                     u151:
   247  000260  EF38  F001         	goto	l1269
   248  000264                     u150:
   249  000264                     
   250                           ;main.c: 85:         {;main.c: 86:             stop_contador();
   251  000264  ECE5  F001         	call	_stop_contador	;wreg free
   252  000268  EF38  F001         	goto	l1269
   253  00026C                     l1267:
   254                           
   255                           ;main.c: 89:             start_contador();
   256  00026C  ECE3  F000         	call	_start_contador	;wreg free
   257  000270                     l1269:
   258                           
   259                           ;main.c: 88:         while(PORTCbits.RC0 == 1) {
   260  000270  B082               	btfsc	130,0,c	;volatile
   261  000272  EF3D  F001         	goto	u161
   262  000276  EF3F  F001         	goto	u160
   263  00027A                     u161:
   264  00027A  EF36  F001         	goto	l1267
   265  00027E                     u160:
   266  00027E  EF20  F001         	goto	l1261
   267  000282  EF1F  F000         	goto	start
   268  000286                     __end_of_main:
   269                           	callstack 0
   270                           
   271 ;; *************** function _start_contador *****************
   272 ;; Defined at:
   273 ;;		line 114 in file "main.c"
   274 ;; Parameters:    Size  Location     Type
   275 ;;		None
   276 ;; Auto vars:     Size  Location     Type
   277 ;;  i               2   13[COMRAM] int 
   278 ;;  j               2   11[COMRAM] int 
   279 ;; Return value:  Size  Location     Type
   280 ;;                  1    wreg      void 
   281 ;; Registers used:
   282 ;;		wreg, status,2, status,0, cstack
   283 ;; Tracked objects:
   284 ;;		On entry : 0/0
   285 ;;		On exit  : 0/0
   286 ;;		Unchanged: 0/0
   287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   288 ;;      Params:         0       0       0       0       0       0       0       0       0
   289 ;;      Locals:         4       0       0       0       0       0       0       0       0
   290 ;;      Temps:          0       0       0       0       0       0       0       0       0
   291 ;;      Totals:         4       0       0       0       0       0       0       0       0
   292 ;;Total ram usage:        4 bytes
   293 ;; Hardware stack levels used:    1
   294 ;; Hardware stack levels required when called:    7
   295 ;; This function calls:
   296 ;;		_TMR0_Reload
   297 ;;		_prender_num
   298 ;;		_prender_num_2
   299 ;;		_reset_contador
   300 ;;		_segundo
   301 ;; This function is called by:
   302 ;;		_main
   303 ;; This function uses a non-reentrant model
   304 ;;
   305                           
   306                           	psect	text1
   307  0001C6                     __ptext1:
   308                           	callstack 0
   309  0001C6                     _start_contador:
   310                           	callstack 23
   311  0001C6                     
   312                           ;main.c: 115:     for(int j = 0; j < 10; j++){
   313  0001C6  0E00               	movlw	0
   314  0001C8  6E0D               	movwf	(start_contador@j+1)^0,c
   315  0001CA  0E00               	movlw	0
   316  0001CC  6E0C               	movwf	start_contador@j^0,c
   317  0001CE                     l1237:
   318                           
   319                           ;main.c: 116:         prender_num_2(j);
   320  0001CE  C00C  F003         	movff	start_contador@j,prender_num_2@num
   321  0001D2  C00D  F004         	movff	start_contador@j+1,prender_num_2@num+1
   322  0001D6  EC21  F000         	call	_prender_num_2	;wreg free
   323  0001DA                     
   324                           ;main.c: 117:         for(int i = 0; i < 10; i++){
   325  0001DA  0E00               	movlw	0
   326  0001DC  6E0F               	movwf	(start_contador@i+1)^0,c
   327  0001DE  0E00               	movlw	0
   328  0001E0  6E0E               	movwf	start_contador@i^0,c
   329  0001E2                     l1245:
   330                           
   331                           ;main.c: 118:             prender_num(i);
   332  0001E2  C00E  F003         	movff	start_contador@i,prender_num@num
   333  0001E6  C00F  F004         	movff	start_contador@i+1,prender_num@num+1
   334  0001EA  EC82  F000         	call	_prender_num	;wreg free
   335                           
   336                           ;main.c: 119:             segundo();
   337  0001EE  EC9C  F001         	call	_segundo	;wreg free
   338  0001F2                     
   339                           ;main.c: 120:             TMR0_Reload();
   340  0001F2  ECDB  F001         	call	_TMR0_Reload	;wreg free
   341  0001F6                     
   342                           ;main.c: 121:         }
   343  0001F6  4A0E               	infsnz	start_contador@i^0,f,c
   344  0001F8  2A0F               	incf	(start_contador@i+1)^0,f,c
   345  0001FA  BE0F               	btfsc	(start_contador@i+1)^0,7,c
   346  0001FC  EF09  F001         	goto	u121
   347  000200  500F               	movf	(start_contador@i+1)^0,w,c
   348  000202  E109               	bnz	u120
   349  000204  0E0A               	movlw	10
   350  000206  5C0E               	subwf	start_contador@i^0,w,c
   351  000208  A0D8               	btfss	status,0,c
   352  00020A  EF09  F001         	goto	u121
   353  00020E  EF0B  F001         	goto	u120
   354  000212                     u121:
   355  000212  EFF1  F000         	goto	l1245
   356  000216                     u120:
   357  000216                     
   358                           ;main.c: 122:     }
   359  000216  4A0C               	infsnz	start_contador@j^0,f,c
   360  000218  2A0D               	incf	(start_contador@j+1)^0,f,c
   361  00021A  BE0D               	btfsc	(start_contador@j+1)^0,7,c
   362  00021C  EF19  F001         	goto	u131
   363  000220  500D               	movf	(start_contador@j+1)^0,w,c
   364  000222  E109               	bnz	u130
   365  000224  0E0A               	movlw	10
   366  000226  5C0C               	subwf	start_contador@j^0,w,c
   367  000228  A0D8               	btfss	status,0,c
   368  00022A  EF19  F001         	goto	u131
   369  00022E  EF1B  F001         	goto	u130
   370  000232                     u131:
   371  000232  EFE7  F000         	goto	l1237
   372  000236                     u130:
   373  000236                     
   374                           ;main.c: 123:     reset_contador();
   375  000236  ECD4  F001         	call	_reset_contador	;wreg free
   376  00023A  0012               	return		;funcret
   377  00023C                     __end_of_start_contador:
   378                           	callstack 0
   379                           
   380 ;; *************** function _segundo *****************
   381 ;; Defined at:
   382 ;;		line 106 in file "main.c"
   383 ;; Parameters:    Size  Location     Type
   384 ;;		None
   385 ;; Auto vars:     Size  Location     Type
   386 ;;  bandera         1    0        _Bool 
   387 ;; Return value:  Size  Location     Type
   388 ;;                  1    wreg      void 
   389 ;; Registers used:
   390 ;;		wreg, status,2, status,0, cstack
   391 ;; Tracked objects:
   392 ;;		On entry : 0/0
   393 ;;		On exit  : 0/0
   394 ;;		Unchanged: 0/0
   395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   396 ;;      Params:         0       0       0       0       0       0       0       0       0
   397 ;;      Locals:         1       0       0       0       0       0       0       0       0
   398 ;;      Temps:          0       0       0       0       0       0       0       0       0
   399 ;;      Totals:         1       0       0       0       0       0       0       0       0
   400 ;;Total ram usage:        1 bytes
   401 ;; Hardware stack levels used:    1
   402 ;; Hardware stack levels required when called:    4
   403 ;; This function calls:
   404 ;;		_TMR0_ReadTimer
   405 ;;		_TMR0_StartTimer
   406 ;; This function is called by:
   407 ;;		_start_contador
   408 ;; This function uses a non-reentrant model
   409 ;;
   410                           
   411                           	psect	text2
   412  000338                     __ptext2:
   413                           	callstack 0
   414  000338                     _segundo:
   415                           	callstack 25
   416  000338                     
   417                           ;main.c: 108:     TMR0_StartTimer();
   418  000338  ECE8  F001         	call	_TMR0_StartTimer	;wreg free
   419                           
   420                           ;main.c: 109:     while(TMR0_ReadTimer() != 255){
   421  00033C  EFA0  F001         	goto	l1159
   422  000340                     l1157:
   423  000340                     l1159:
   424                           
   425                           ;main.c: 109:     while(TMR0_ReadTimer() != 255){
   426  000340  ECAC  F001         	call	_TMR0_ReadTimer	;wreg free
   427  000344  2803               	incf	?_TMR0_ReadTimer^0,w,c
   428  000346  1004               	iorwf	(?_TMR0_ReadTimer+1)^0,w,c
   429  000348  A4D8               	btfss	status,2,c
   430  00034A  EFA9  F001         	goto	u111
   431  00034E  EFAB  F001         	goto	u110
   432  000352                     u111:
   433  000352  EFA0  F001         	goto	l1157
   434  000356                     u110:
   435  000356  0012               	return		;funcret
   436  000358                     __end_of_segundo:
   437                           	callstack 0
   438                           
   439 ;; *************** function _TMR0_StartTimer *****************
   440 ;; Defined at:
   441 ;;		line 97 in file "mcc_generated_files/tmr0.c"
   442 ;; Parameters:    Size  Location     Type
   443 ;;		None
   444 ;; Auto vars:     Size  Location     Type
   445 ;;		None
   446 ;; Return value:  Size  Location     Type
   447 ;;                  1    wreg      void 
   448 ;; Registers used:
   449 ;;		None
   450 ;; Tracked objects:
   451 ;;		On entry : 0/0
   452 ;;		On exit  : 0/0
   453 ;;		Unchanged: 0/0
   454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   455 ;;      Params:         0       0       0       0       0       0       0       0       0
   456 ;;      Locals:         0       0       0       0       0       0       0       0       0
   457 ;;      Temps:          0       0       0       0       0       0       0       0       0
   458 ;;      Totals:         0       0       0       0       0       0       0       0       0
   459 ;;Total ram usage:        0 bytes
   460 ;; Hardware stack levels used:    1
   461 ;; Hardware stack levels required when called:    3
   462 ;; This function calls:
   463 ;;		Nothing
   464 ;; This function is called by:
   465 ;;		_segundo
   466 ;; This function uses a non-reentrant model
   467 ;;
   468                           
   469                           	psect	text3
   470  0003D0                     __ptext3:
   471                           	callstack 0
   472  0003D0                     _TMR0_StartTimer:
   473                           	callstack 25
   474  0003D0                     
   475                           ;mcc_generated_files/tmr0.c: 100:     T0CONbits.TMR0ON = 1;
   476  0003D0  8ED5               	bsf	213,7,c	;volatile
   477  0003D2  0012               	return		;funcret
   478  0003D4                     __end_of_TMR0_StartTimer:
   479                           	callstack 0
   480                           
   481 ;; *************** function _TMR0_ReadTimer *****************
   482 ;; Defined at:
   483 ;;		line 109 in file "mcc_generated_files/tmr0.c"
   484 ;; Parameters:    Size  Location     Type
   485 ;;		None
   486 ;; Auto vars:     Size  Location     Type
   487 ;;  readVal         2    6[COMRAM] unsigned short 
   488 ;;  readValHigh     1    9[COMRAM] unsigned char 
   489 ;;  readValLow      1    8[COMRAM] unsigned char 
   490 ;; Return value:  Size  Location     Type
   491 ;;                  2    2[COMRAM] unsigned short 
   492 ;; Registers used:
   493 ;;		wreg, status,2
   494 ;; Tracked objects:
   495 ;;		On entry : 0/0
   496 ;;		On exit  : 0/0
   497 ;;		Unchanged: 0/0
   498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   499 ;;      Params:         2       0       0       0       0       0       0       0       0
   500 ;;      Locals:         4       0       0       0       0       0       0       0       0
   501 ;;      Temps:          2       0       0       0       0       0       0       0       0
   502 ;;      Totals:         8       0       0       0       0       0       0       0       0
   503 ;;Total ram usage:        8 bytes
   504 ;; Hardware stack levels used:    1
   505 ;; Hardware stack levels required when called:    3
   506 ;; This function calls:
   507 ;;		Nothing
   508 ;; This function is called by:
   509 ;;		_segundo
   510 ;; This function uses a non-reentrant model
   511 ;;
   512                           
   513                           	psect	text4
   514  000358                     __ptext4:
   515                           	callstack 0
   516  000358                     _TMR0_ReadTimer:
   517                           	callstack 25
   518  000358                     
   519                           ;mcc_generated_files/tmr0.c: 111:     uint16_t readVal;;mcc_generated_files/tmr0.c: 112:
      +                               uint8_t readValLow;;mcc_generated_files/tmr0.c: 113:     uint8_t readValHigh;;mcc_g
      +                          enerated_files/tmr0.c: 115:     readValLow = TMR0L;
   520  000358  CFD6 F009          	movff	4054,TMR0_ReadTimer@readValLow	;volatile
   521                           
   522                           ;mcc_generated_files/tmr0.c: 116:     readValHigh = TMR0H;
   523  00035C  CFD7 F00A          	movff	4055,TMR0_ReadTimer@readValHigh	;volatile
   524  000360                     
   525                           ;mcc_generated_files/tmr0.c: 117:     readVal = ((uint16_t)readValHigh << 8) + readValLo
      +                          w;
   526  000360  500A               	movf	TMR0_ReadTimer@readValHigh^0,w,c
   527  000362  6E05               	movwf	??_TMR0_ReadTimer^0,c
   528  000364  5009               	movf	TMR0_ReadTimer@readValLow^0,w,c
   529  000366  6E07               	movwf	TMR0_ReadTimer@readVal^0,c
   530  000368  C005  F008         	movff	??_TMR0_ReadTimer,TMR0_ReadTimer@readVal+1
   531  00036C                     
   532                           ;mcc_generated_files/tmr0.c: 119:     return readVal;
   533  00036C  C007  F003         	movff	TMR0_ReadTimer@readVal,?_TMR0_ReadTimer
   534  000370  C008  F004         	movff	TMR0_ReadTimer@readVal+1,?_TMR0_ReadTimer+1
   535  000374  0012               	return		;funcret
   536  000376                     __end_of_TMR0_ReadTimer:
   537                           	callstack 0
   538                           
   539 ;; *************** function _reset_contador *****************
   540 ;; Defined at:
   541 ;;		line 126 in file "main.c"
   542 ;; Parameters:    Size  Location     Type
   543 ;;		None
   544 ;; Auto vars:     Size  Location     Type
   545 ;;		None
   546 ;; Return value:  Size  Location     Type
   547 ;;                  1    wreg      void 
   548 ;; Registers used:
   549 ;;		wreg, status,2, status,0, cstack
   550 ;; Tracked objects:
   551 ;;		On entry : 0/0
   552 ;;		On exit  : 0/0
   553 ;;		Unchanged: 0/0
   554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   555 ;;      Params:         0       0       0       0       0       0       0       0       0
   556 ;;      Locals:         0       0       0       0       0       0       0       0       0
   557 ;;      Temps:          0       0       0       0       0       0       0       0       0
   558 ;;      Totals:         0       0       0       0       0       0       0       0       0
   559 ;;Total ram usage:        0 bytes
   560 ;; Hardware stack levels used:    1
   561 ;; Hardware stack levels required when called:    6
   562 ;; This function calls:
   563 ;;		_stop_contador
   564 ;; This function is called by:
   565 ;;		_main
   566 ;;		_start_contador
   567 ;; This function uses a non-reentrant model
   568 ;;
   569                           
   570                           	psect	text5
   571  0003A8                     __ptext5:
   572                           	callstack 0
   573  0003A8                     _reset_contador:
   574                           	callstack 23
   575  0003A8                     
   576                           ;main.c: 127:     stop_contador();
   577  0003A8  ECE5  F001         	call	_stop_contador	;wreg free
   578  0003AC                     
   579                           ;main.c: 128:     PORTB = 0B00111111;
   580  0003AC  0E3F               	movlw	63
   581  0003AE  6E81               	movwf	129,c	;volatile
   582  0003B0                     
   583                           ;main.c: 129:     PORTD = 0B00111111;
   584  0003B0  0E3F               	movlw	63
   585  0003B2  6E83               	movwf	131,c	;volatile
   586  0003B4  0012               	return		;funcret
   587  0003B6                     __end_of_reset_contador:
   588                           	callstack 0
   589                           
   590 ;; *************** function _stop_contador *****************
   591 ;; Defined at:
   592 ;;		line 132 in file "main.c"
   593 ;; Parameters:    Size  Location     Type
   594 ;;		None
   595 ;; Auto vars:     Size  Location     Type
   596 ;;		None
   597 ;; Return value:  Size  Location     Type
   598 ;;                  1    wreg      void 
   599 ;; Registers used:
   600 ;;		wreg, status,2, status,0, cstack
   601 ;; Tracked objects:
   602 ;;		On entry : 0/0
   603 ;;		On exit  : 0/0
   604 ;;		Unchanged: 0/0
   605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   606 ;;      Params:         0       0       0       0       0       0       0       0       0
   607 ;;      Locals:         0       0       0       0       0       0       0       0       0
   608 ;;      Temps:          0       0       0       0       0       0       0       0       0
   609 ;;      Totals:         0       0       0       0       0       0       0       0       0
   610 ;;Total ram usage:        0 bytes
   611 ;; Hardware stack levels used:    1
   612 ;; Hardware stack levels required when called:    5
   613 ;; This function calls:
   614 ;;		_TMR0_Initialize
   615 ;; This function is called by:
   616 ;;		_main
   617 ;;		_reset_contador
   618 ;; This function uses a non-reentrant model
   619 ;;
   620                           
   621                           	psect	text6
   622  0003CA                     __ptext6:
   623                           	callstack 0
   624  0003CA                     _stop_contador:
   625                           	callstack 25
   626  0003CA                     
   627                           ;main.c: 133:     TMR0_Initialize();
   628  0003CA  EC81  F001         	call	_TMR0_Initialize	;wreg free
   629  0003CE  0012               	return		;funcret
   630  0003D0                     __end_of_stop_contador:
   631                           	callstack 0
   632                           
   633 ;; *************** function _prender_num_2 *****************
   634 ;; Defined at:
   635 ;;		line 171 in file "main.c"
   636 ;; Parameters:    Size  Location     Type
   637 ;;  num             2    2[COMRAM] int 
   638 ;; Auto vars:     Size  Location     Type
   639 ;;		None
   640 ;; Return value:  Size  Location     Type
   641 ;;                  1    wreg      void 
   642 ;; Registers used:
   643 ;;		wreg, status,2, status,0
   644 ;; Tracked objects:
   645 ;;		On entry : 0/0
   646 ;;		On exit  : 0/0
   647 ;;		Unchanged: 0/0
   648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   649 ;;      Params:         2       0       0       0       0       0       0       0       0
   650 ;;      Locals:         0       0       0       0       0       0       0       0       0
   651 ;;      Temps:          2       0       0       0       0       0       0       0       0
   652 ;;      Totals:         4       0       0       0       0       0       0       0       0
   653 ;;Total ram usage:        4 bytes
   654 ;; Hardware stack levels used:    1
   655 ;; Hardware stack levels required when called:    3
   656 ;; This function calls:
   657 ;;		Nothing
   658 ;; This function is called by:
   659 ;;		_start_contador
   660 ;; This function uses a non-reentrant model
   661 ;;
   662                           
   663                           	psect	text7
   664  000042                     __ptext7:
   665                           	callstack 0
   666  000042                     _prender_num_2:
   667                           	callstack 26
   668  000042                     
   669                           ;main.c: 172:     switch(num) {
   670  000042  EF4B  F000         	goto	l1187
   671  000046                     l1165:
   672                           
   673                           ;main.c: 174:             PORTD = 0B00111111;
   674  000046  0E3F               	movlw	63
   675  000048  6E83               	movwf	131,c	;volatile
   676                           
   677                           ;main.c: 175:             break;
   678  00004A  EF81  F000         	goto	l199
   679  00004E                     l1167:
   680                           
   681                           ;main.c: 177:             PORTD = 0B00000110;
   682  00004E  0E06               	movlw	6
   683  000050  6E83               	movwf	131,c	;volatile
   684                           
   685                           ;main.c: 178:             break;
   686  000052  EF81  F000         	goto	l199
   687  000056                     l1169:
   688                           
   689                           ;main.c: 180:             PORTD = 0B01011011;
   690  000056  0E5B               	movlw	91
   691  000058  6E83               	movwf	131,c	;volatile
   692                           
   693                           ;main.c: 181:             break;
   694  00005A  EF81  F000         	goto	l199
   695  00005E                     l1171:
   696                           
   697                           ;main.c: 183:             PORTD = 0B01001111;
   698  00005E  0E4F               	movlw	79
   699  000060  6E83               	movwf	131,c	;volatile
   700                           
   701                           ;main.c: 184:             break;
   702  000062  EF81  F000         	goto	l199
   703  000066                     l1173:
   704                           
   705                           ;main.c: 186:             PORTD = 0B01100110;
   706  000066  0E66               	movlw	102
   707  000068  6E83               	movwf	131,c	;volatile
   708                           
   709                           ;main.c: 187:             break;
   710  00006A  EF81  F000         	goto	l199
   711  00006E                     l1175:
   712                           
   713                           ;main.c: 189:             PORTD = 0B01101101;
   714  00006E  0E6D               	movlw	109
   715  000070  6E83               	movwf	131,c	;volatile
   716                           
   717                           ;main.c: 190:             break;
   718  000072  EF81  F000         	goto	l199
   719  000076                     l1177:
   720                           
   721                           ;main.c: 192:             PORTD = 0B01111101;
   722  000076  0E7D               	movlw	125
   723  000078  6E83               	movwf	131,c	;volatile
   724                           
   725                           ;main.c: 193:             break;
   726  00007A  EF81  F000         	goto	l199
   727  00007E                     l1179:
   728                           
   729                           ;main.c: 195:             PORTD = 0B00000111;
   730  00007E  0E07               	movlw	7
   731  000080  6E83               	movwf	131,c	;volatile
   732                           
   733                           ;main.c: 196:             break;
   734  000082  EF81  F000         	goto	l199
   735  000086                     l1181:
   736                           
   737                           ;main.c: 198:             PORTD = 0B01111111;
   738  000086  0E7F               	movlw	127
   739  000088  6E83               	movwf	131,c	;volatile
   740                           
   741                           ;main.c: 199:             break;
   742  00008A  EF81  F000         	goto	l199
   743  00008E                     l1183:
   744                           
   745                           ;main.c: 201:             PORTD = 0B01100111;
   746  00008E  0E67               	movlw	103
   747  000090  6E83               	movwf	131,c	;volatile
   748                           
   749                           ;main.c: 202:             break;
   750  000092  EF81  F000         	goto	l199
   751  000096                     l1187:
   752  000096  C003  F005         	movff	prender_num_2@num,??_prender_num_2
   753  00009A  C004  F006         	movff	prender_num_2@num+1,??_prender_num_2+1
   754                           
   755                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   756                           ; Switch size 1, requested type "simple"
   757                           ; Number of cases is 1, Range of values is 0 to 0
   758                           ; switch strategies available:
   759                           ; Name         Instructions Cycles
   760                           ; simple_byte            4     3 (average)
   761                           ;	Chosen strategy is simple_byte
   762  00009E  5006               	movf	(??_prender_num_2+1)^0,w,c
   763  0000A0  0A00               	xorlw	0	; case 0
   764  0000A2  B4D8               	btfsc	status,2,c
   765  0000A4  EF56  F000         	goto	l1311
   766  0000A8  EF81  F000         	goto	l199
   767  0000AC                     l1311:
   768                           
   769                           ; Switch size 1, requested type "simple"
   770                           ; Number of cases is 10, Range of values is 0 to 9
   771                           ; switch strategies available:
   772                           ; Name         Instructions Cycles
   773                           ; simple_byte           31    16 (average)
   774                           ;	Chosen strategy is simple_byte
   775  0000AC  5005               	movf	??_prender_num_2^0,w,c
   776  0000AE  0A00               	xorlw	0	; case 0
   777  0000B0  B4D8               	btfsc	status,2,c
   778  0000B2  EF23  F000         	goto	l1165
   779  0000B6  0A01               	xorlw	1	; case 1
   780  0000B8  B4D8               	btfsc	status,2,c
   781  0000BA  EF27  F000         	goto	l1167
   782  0000BE  0A03               	xorlw	3	; case 2
   783  0000C0  B4D8               	btfsc	status,2,c
   784  0000C2  EF2B  F000         	goto	l1169
   785  0000C6  0A01               	xorlw	1	; case 3
   786  0000C8  B4D8               	btfsc	status,2,c
   787  0000CA  EF2F  F000         	goto	l1171
   788  0000CE  0A07               	xorlw	7	; case 4
   789  0000D0  B4D8               	btfsc	status,2,c
   790  0000D2  EF33  F000         	goto	l1173
   791  0000D6  0A01               	xorlw	1	; case 5
   792  0000D8  B4D8               	btfsc	status,2,c
   793  0000DA  EF37  F000         	goto	l1175
   794  0000DE  0A03               	xorlw	3	; case 6
   795  0000E0  B4D8               	btfsc	status,2,c
   796  0000E2  EF3B  F000         	goto	l1177
   797  0000E6  0A01               	xorlw	1	; case 7
   798  0000E8  B4D8               	btfsc	status,2,c
   799  0000EA  EF3F  F000         	goto	l1179
   800  0000EE  0A0F               	xorlw	15	; case 8
   801  0000F0  B4D8               	btfsc	status,2,c
   802  0000F2  EF43  F000         	goto	l1181
   803  0000F6  0A01               	xorlw	1	; case 9
   804  0000F8  B4D8               	btfsc	status,2,c
   805  0000FA  EF47  F000         	goto	l1183
   806  0000FE  EF81  F000         	goto	l199
   807  000102                     l199:
   808  000102  0012               	return		;funcret
   809  000104                     __end_of_prender_num_2:
   810                           	callstack 0
   811                           
   812 ;; *************** function _prender_num *****************
   813 ;; Defined at:
   814 ;;		line 136 in file "main.c"
   815 ;; Parameters:    Size  Location     Type
   816 ;;  num             2    2[COMRAM] int 
   817 ;; Auto vars:     Size  Location     Type
   818 ;;		None
   819 ;; Return value:  Size  Location     Type
   820 ;;                  1    wreg      void 
   821 ;; Registers used:
   822 ;;		wreg, status,2, status,0
   823 ;; Tracked objects:
   824 ;;		On entry : 0/0
   825 ;;		On exit  : 0/0
   826 ;;		Unchanged: 0/0
   827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   828 ;;      Params:         2       0       0       0       0       0       0       0       0
   829 ;;      Locals:         0       0       0       0       0       0       0       0       0
   830 ;;      Temps:          2       0       0       0       0       0       0       0       0
   831 ;;      Totals:         4       0       0       0       0       0       0       0       0
   832 ;;Total ram usage:        4 bytes
   833 ;; Hardware stack levels used:    1
   834 ;; Hardware stack levels required when called:    3
   835 ;; This function calls:
   836 ;;		Nothing
   837 ;; This function is called by:
   838 ;;		_start_contador
   839 ;; This function uses a non-reentrant model
   840 ;;
   841                           
   842                           	psect	text8
   843  000104                     __ptext8:
   844                           	callstack 0
   845  000104                     _prender_num:
   846                           	callstack 26
   847  000104                     
   848                           ;main.c: 137:     switch(num) {
   849  000104  EFAC  F000         	goto	l1217
   850  000108                     l1195:
   851                           
   852                           ;main.c: 139:             PORTB = 0B00111111;
   853  000108  0E3F               	movlw	63
   854  00010A  6E81               	movwf	129,c	;volatile
   855                           
   856                           ;main.c: 140:             break;
   857  00010C  EFE2  F000         	goto	l184
   858  000110                     l1197:
   859                           
   860                           ;main.c: 142:             PORTB = 0B00000110;
   861  000110  0E06               	movlw	6
   862  000112  6E81               	movwf	129,c	;volatile
   863                           
   864                           ;main.c: 143:             break;
   865  000114  EFE2  F000         	goto	l184
   866  000118                     l1199:
   867                           
   868                           ;main.c: 145:             PORTB = 0B01011011;
   869  000118  0E5B               	movlw	91
   870  00011A  6E81               	movwf	129,c	;volatile
   871                           
   872                           ;main.c: 146:             break;
   873  00011C  EFE2  F000         	goto	l184
   874  000120                     l1201:
   875                           
   876                           ;main.c: 148:             PORTB = 0B01001111;
   877  000120  0E4F               	movlw	79
   878  000122  6E81               	movwf	129,c	;volatile
   879                           
   880                           ;main.c: 149:             break;
   881  000124  EFE2  F000         	goto	l184
   882  000128                     l1203:
   883                           
   884                           ;main.c: 151:             PORTB = 0B01100110;
   885  000128  0E66               	movlw	102
   886  00012A  6E81               	movwf	129,c	;volatile
   887                           
   888                           ;main.c: 152:             break;
   889  00012C  EFE2  F000         	goto	l184
   890  000130                     l1205:
   891                           
   892                           ;main.c: 154:             PORTB = 0B01101101;
   893  000130  0E6D               	movlw	109
   894  000132  6E81               	movwf	129,c	;volatile
   895                           
   896                           ;main.c: 155:             break;
   897  000134  EFE2  F000         	goto	l184
   898  000138                     l1207:
   899                           
   900                           ;main.c: 157:             PORTB = 0B01111101;
   901  000138  0E7D               	movlw	125
   902  00013A  6E81               	movwf	129,c	;volatile
   903                           
   904                           ;main.c: 158:             break;
   905  00013C  EFE2  F000         	goto	l184
   906  000140                     l1209:
   907                           
   908                           ;main.c: 160:             PORTB = 0B00000111;
   909  000140  0E07               	movlw	7
   910  000142  6E81               	movwf	129,c	;volatile
   911                           
   912                           ;main.c: 161:             break;
   913  000144  EFE2  F000         	goto	l184
   914  000148                     l1211:
   915                           
   916                           ;main.c: 163:             PORTB = 0B01111111;
   917  000148  0E7F               	movlw	127
   918  00014A  6E81               	movwf	129,c	;volatile
   919                           
   920                           ;main.c: 164:             break;
   921  00014C  EFE2  F000         	goto	l184
   922  000150                     l1213:
   923                           
   924                           ;main.c: 166:             PORTB = 0B01100111;
   925  000150  0E67               	movlw	103
   926  000152  6E81               	movwf	129,c	;volatile
   927                           
   928                           ;main.c: 167:             break;
   929  000154  EFE2  F000         	goto	l184
   930  000158                     l1217:
   931  000158  C003  F005         	movff	prender_num@num,??_prender_num
   932  00015C  C004  F006         	movff	prender_num@num+1,??_prender_num+1
   933                           
   934                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   935                           ; Switch size 1, requested type "simple"
   936                           ; Number of cases is 1, Range of values is 0 to 0
   937                           ; switch strategies available:
   938                           ; Name         Instructions Cycles
   939                           ; simple_byte            4     3 (average)
   940                           ;	Chosen strategy is simple_byte
   941  000160  5006               	movf	(??_prender_num+1)^0,w,c
   942  000162  0A00               	xorlw	0	; case 0
   943  000164  B4D8               	btfsc	status,2,c
   944  000166  EFB7  F000         	goto	l1313
   945  00016A  EFE2  F000         	goto	l184
   946  00016E                     l1313:
   947                           
   948                           ; Switch size 1, requested type "simple"
   949                           ; Number of cases is 10, Range of values is 0 to 9
   950                           ; switch strategies available:
   951                           ; Name         Instructions Cycles
   952                           ; simple_byte           31    16 (average)
   953                           ;	Chosen strategy is simple_byte
   954  00016E  5005               	movf	??_prender_num^0,w,c
   955  000170  0A00               	xorlw	0	; case 0
   956  000172  B4D8               	btfsc	status,2,c
   957  000174  EF84  F000         	goto	l1195
   958  000178  0A01               	xorlw	1	; case 1
   959  00017A  B4D8               	btfsc	status,2,c
   960  00017C  EF88  F000         	goto	l1197
   961  000180  0A03               	xorlw	3	; case 2
   962  000182  B4D8               	btfsc	status,2,c
   963  000184  EF8C  F000         	goto	l1199
   964  000188  0A01               	xorlw	1	; case 3
   965  00018A  B4D8               	btfsc	status,2,c
   966  00018C  EF90  F000         	goto	l1201
   967  000190  0A07               	xorlw	7	; case 4
   968  000192  B4D8               	btfsc	status,2,c
   969  000194  EF94  F000         	goto	l1203
   970  000198  0A01               	xorlw	1	; case 5
   971  00019A  B4D8               	btfsc	status,2,c
   972  00019C  EF98  F000         	goto	l1205
   973  0001A0  0A03               	xorlw	3	; case 6
   974  0001A2  B4D8               	btfsc	status,2,c
   975  0001A4  EF9C  F000         	goto	l1207
   976  0001A8  0A01               	xorlw	1	; case 7
   977  0001AA  B4D8               	btfsc	status,2,c
   978  0001AC  EFA0  F000         	goto	l1209
   979  0001B0  0A0F               	xorlw	15	; case 8
   980  0001B2  B4D8               	btfsc	status,2,c
   981  0001B4  EFA4  F000         	goto	l1211
   982  0001B8  0A01               	xorlw	1	; case 9
   983  0001BA  B4D8               	btfsc	status,2,c
   984  0001BC  EFA8  F000         	goto	l1213
   985  0001C0  EFE2  F000         	goto	l184
   986  0001C4                     l184:
   987  0001C4  0012               	return		;funcret
   988  0001C6                     __end_of_prender_num:
   989                           	callstack 0
   990                           
   991 ;; *************** function _TMR0_Reload *****************
   992 ;; Defined at:
   993 ;;		line 129 in file "mcc_generated_files/tmr0.c"
   994 ;; Parameters:    Size  Location     Type
   995 ;;		None
   996 ;; Auto vars:     Size  Location     Type
   997 ;;		None
   998 ;; Return value:  Size  Location     Type
   999 ;;                  1    wreg      void 
  1000 ;; Registers used:
  1001 ;;		wreg, status,2
  1002 ;; Tracked objects:
  1003 ;;		On entry : 0/0
  1004 ;;		On exit  : 0/0
  1005 ;;		Unchanged: 0/0
  1006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1007 ;;      Params:         0       0       0       0       0       0       0       0       0
  1008 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1009 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1010 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1011 ;;Total ram usage:        0 bytes
  1012 ;; Hardware stack levels used:    1
  1013 ;; Hardware stack levels required when called:    3
  1014 ;; This function calls:
  1015 ;;		Nothing
  1016 ;; This function is called by:
  1017 ;;		_start_contador
  1018 ;; This function uses a non-reentrant model
  1019 ;;
  1020                           
  1021                           	psect	text9
  1022  0003B6                     __ptext9:
  1023                           	callstack 0
  1024  0003B6                     _TMR0_Reload:
  1025                           	callstack 26
  1026  0003B6                     
  1027                           ;mcc_generated_files/tmr0.c: 132:     TMR0H = timer0ReloadVal >> 8;
  1028  0003B6  5011               	movf	(_timer0ReloadVal+1)^0,w,c	;volatile
  1029  0003B8  6ED7               	movwf	215,c	;volatile
  1030  0003BA                     
  1031                           ;mcc_generated_files/tmr0.c: 133:     TMR0L = (uint8_t) timer0ReloadVal;
  1032  0003BA  C010  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  1033  0003BE  0012               	return		;funcret
  1034  0003C0                     __end_of_TMR0_Reload:
  1035                           	callstack 0
  1036                           
  1037 ;; *************** function _SYSTEM_Initialize *****************
  1038 ;; Defined at:
  1039 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1040 ;; Parameters:    Size  Location     Type
  1041 ;;		None
  1042 ;; Auto vars:     Size  Location     Type
  1043 ;;		None
  1044 ;; Return value:  Size  Location     Type
  1045 ;;                  1    wreg      void 
  1046 ;; Registers used:
  1047 ;;		wreg, status,2, status,0, cstack
  1048 ;; Tracked objects:
  1049 ;;		On entry : 0/0
  1050 ;;		On exit  : 0/0
  1051 ;;		Unchanged: 0/0
  1052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1053 ;;      Params:         0       0       0       0       0       0       0       0       0
  1054 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1055 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1056 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1057 ;;Total ram usage:        0 bytes
  1058 ;; Hardware stack levels used:    1
  1059 ;; Hardware stack levels required when called:    5
  1060 ;; This function calls:
  1061 ;;		_INTERRUPT_Initialize
  1062 ;;		_OSCILLATOR_Initialize
  1063 ;;		_PIN_MANAGER_Initialize
  1064 ;;		_TMR0_Initialize
  1065 ;; This function is called by:
  1066 ;;		_main
  1067 ;; This function uses a non-reentrant model
  1068 ;;
  1069                           
  1070                           	psect	text10
  1071  000376                     __ptext10:
  1072                           	callstack 0
  1073  000376                     _SYSTEM_Initialize:
  1074                           	callstack 25
  1075  000376                     
  1076                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  1077  000376  ECEA  F001         	call	_INTERRUPT_Initialize	;wreg free
  1078  00037A                     
  1079                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  1080  00037A  EC43  F001         	call	_PIN_MANAGER_Initialize	;wreg free
  1081  00037E                     
  1082                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  1083  00037E  ECC4  F001         	call	_OSCILLATOR_Initialize	;wreg free
  1084  000382                     
  1085                           ;mcc_generated_files/mcc.c: 56:     TMR0_Initialize();
  1086  000382  EC81  F001         	call	_TMR0_Initialize	;wreg free
  1087  000386  0012               	return		;funcret
  1088  000388                     __end_of_SYSTEM_Initialize:
  1089                           	callstack 0
  1090                           
  1091 ;; *************** function _TMR0_Initialize *****************
  1092 ;; Defined at:
  1093 ;;		line 67 in file "mcc_generated_files/tmr0.c"
  1094 ;; Parameters:    Size  Location     Type
  1095 ;;		None
  1096 ;; Auto vars:     Size  Location     Type
  1097 ;;		None
  1098 ;; Return value:  Size  Location     Type
  1099 ;;                  1    wreg      void 
  1100 ;; Registers used:
  1101 ;;		wreg, status,2, status,0, cstack
  1102 ;; Tracked objects:
  1103 ;;		On entry : 0/0
  1104 ;;		On exit  : 0/0
  1105 ;;		Unchanged: 0/0
  1106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1107 ;;      Params:         0       0       0       0       0       0       0       0       0
  1108 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1109 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1110 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1111 ;;Total ram usage:        2 bytes
  1112 ;; Hardware stack levels used:    1
  1113 ;; Hardware stack levels required when called:    4
  1114 ;; This function calls:
  1115 ;;		_TMR0_SetInterruptHandler
  1116 ;; This function is called by:
  1117 ;;		_SYSTEM_Initialize
  1118 ;;		_stop_contador
  1119 ;; This function uses a non-reentrant model
  1120 ;;
  1121                           
  1122                           	psect	text11
  1123  000302                     __ptext11:
  1124                           	callstack 0
  1125  000302                     _TMR0_Initialize:
  1126                           	callstack 25
  1127  000302                     
  1128                           ;mcc_generated_files/tmr0.c: 72:     T0CONbits.T08BIT = 0;
  1129  000302  9CD5               	bcf	213,6,c	;volatile
  1130  000304                     
  1131                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0x85;
  1132  000304  0E85               	movlw	133
  1133  000306  6ED7               	movwf	215,c	;volatile
  1134                           
  1135                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0xED;
  1136  000308  0EED               	movlw	237
  1137  00030A  6ED6               	movwf	214,c	;volatile
  1138  00030C                     
  1139                           ;mcc_generated_files/tmr0.c: 82:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
  1140  00030C  50D6               	movf	214,w,c	;volatile
  1141  00030E  CFD7 F005          	movff	4055,??_TMR0_Initialize	;volatile
  1142  000312  6A06               	clrf	(??_TMR0_Initialize+1)^0,c
  1143  000314  C005  F006         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  1144  000318  6A05               	clrf	??_TMR0_Initialize^0,c
  1145  00031A  1005               	iorwf	??_TMR0_Initialize^0,w,c
  1146  00031C  6E10               	movwf	_timer0ReloadVal^0,c	;volatile
  1147  00031E  5006               	movf	(??_TMR0_Initialize+1)^0,w,c
  1148  000320  6E11               	movwf	(_timer0ReloadVal+1)^0,c	;volatile
  1149  000322                     
  1150                           ;mcc_generated_files/tmr0.c: 85:     INTCONbits.TMR0IF = 0;
  1151  000322  94F2               	bcf	242,2,c	;volatile
  1152  000324                     
  1153                           ;mcc_generated_files/tmr0.c: 88:     INTCONbits.TMR0IE = 1;
  1154  000324  8AF2               	bsf	242,5,c	;volatile
  1155  000326                     
  1156                           ;mcc_generated_files/tmr0.c: 91:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  1157  000326  0ED8               	movlw	low _TMR0_DefaultInterruptHandler
  1158  000328  6E03               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  1159  00032A  0E03               	movlw	high _TMR0_DefaultInterruptHandler
  1160  00032C  6E04               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  1161  00032E  ECE0  F001         	call	_TMR0_SetInterruptHandler	;wreg free
  1162  000332                     
  1163                           ;mcc_generated_files/tmr0.c: 94:     T0CON = 0x95;
  1164  000332  0E95               	movlw	149
  1165  000334  6ED5               	movwf	213,c	;volatile
  1166  000336  0012               	return		;funcret
  1167  000338                     __end_of_TMR0_Initialize:
  1168                           	callstack 0
  1169                           
  1170 ;; *************** function _TMR0_SetInterruptHandler *****************
  1171 ;; Defined at:
  1172 ;;		line 156 in file "mcc_generated_files/tmr0.c"
  1173 ;; Parameters:    Size  Location     Type
  1174 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
  1175 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  1176 ;; Auto vars:     Size  Location     Type
  1177 ;;		None
  1178 ;; Return value:  Size  Location     Type
  1179 ;;                  1    wreg      void 
  1180 ;; Registers used:
  1181 ;;		wreg, status,2, status,0
  1182 ;; Tracked objects:
  1183 ;;		On entry : 0/0
  1184 ;;		On exit  : 0/0
  1185 ;;		Unchanged: 0/0
  1186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1187 ;;      Params:         2       0       0       0       0       0       0       0       0
  1188 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1189 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1190 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1191 ;;Total ram usage:        2 bytes
  1192 ;; Hardware stack levels used:    1
  1193 ;; Hardware stack levels required when called:    3
  1194 ;; This function calls:
  1195 ;;		Nothing
  1196 ;; This function is called by:
  1197 ;;		_TMR0_Initialize
  1198 ;; This function uses a non-reentrant model
  1199 ;;
  1200                           
  1201                           	psect	text12
  1202  0003C0                     __ptext12:
  1203                           	callstack 0
  1204  0003C0                     _TMR0_SetInterruptHandler:
  1205                           	callstack 25
  1206  0003C0                     
  1207                           ;mcc_generated_files/tmr0.c: 157:     TMR0_InterruptHandler = InterruptHandler;
  1208  0003C0  C003  F012         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  1209  0003C4  C004  F013         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  1210  0003C8  0012               	return		;funcret
  1211  0003CA                     __end_of_TMR0_SetInterruptHandler:
  1212                           	callstack 0
  1213                           
  1214 ;; *************** function _PIN_MANAGER_Initialize *****************
  1215 ;; Defined at:
  1216 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1217 ;; Parameters:    Size  Location     Type
  1218 ;;		None
  1219 ;; Auto vars:     Size  Location     Type
  1220 ;;		None
  1221 ;; Return value:  Size  Location     Type
  1222 ;;                  1    wreg      void 
  1223 ;; Registers used:
  1224 ;;		wreg, status,2
  1225 ;; Tracked objects:
  1226 ;;		On entry : 0/0
  1227 ;;		On exit  : 0/0
  1228 ;;		Unchanged: 0/0
  1229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1230 ;;      Params:         0       0       0       0       0       0       0       0       0
  1231 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1232 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1233 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1234 ;;Total ram usage:        0 bytes
  1235 ;; Hardware stack levels used:    1
  1236 ;; Hardware stack levels required when called:    3
  1237 ;; This function calls:
  1238 ;;		Nothing
  1239 ;; This function is called by:
  1240 ;;		_SYSTEM_Initialize
  1241 ;; This function uses a non-reentrant model
  1242 ;;
  1243                           
  1244                           	psect	text13
  1245  000286                     __ptext13:
  1246                           	callstack 0
  1247  000286                     _PIN_MANAGER_Initialize:
  1248                           	callstack 26
  1249  000286                     
  1250                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  1251  000286  0E00               	movlw	0
  1252  000288  6E8D               	movwf	141,c	;volatile
  1253                           
  1254                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  1255  00028A  0E00               	movlw	0
  1256  00028C  6E8C               	movwf	140,c	;volatile
  1257                           
  1258                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  1259  00028E  0E00               	movlw	0
  1260  000290  6E89               	movwf	137,c	;volatile
  1261                           
  1262                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  1263  000292  0E00               	movlw	0
  1264  000294  6E8A               	movwf	138,c	;volatile
  1265                           
  1266                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  1267  000296  0E00               	movlw	0
  1268  000298  6E8B               	movwf	139,c	;volatile
  1269                           
  1270                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  1271  00029A  0E07               	movlw	7
  1272  00029C  6E96               	movwf	150,c	;volatile
  1273  00029E                     
  1274                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
  1275  00029E  6892               	setf	146,c	;volatile
  1276                           
  1277                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0x00;
  1278  0002A0  0E00               	movlw	0
  1279  0002A2  6E93               	movwf	147,c	;volatile
  1280                           
  1281                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xC7;
  1282  0002A4  0EC7               	movlw	199
  1283  0002A6  6E94               	movwf	148,c	;volatile
  1284                           
  1285                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0x00;
  1286  0002A8  0E00               	movlw	0
  1287  0002AA  6E95               	movwf	149,c	;volatile
  1288                           
  1289                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x00;
  1290  0002AC  0E00               	movlw	0
  1291  0002AE  010F               	movlb	15	; () banked
  1292  0002B0  6F5E               	movwf	94,b	;volatile
  1293                           
  1294                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xC0;
  1295  0002B2  0EC0               	movlw	192
  1296  0002B4  6F5D               	movwf	93,b	;volatile
  1297                           
  1298                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x00;
  1299  0002B6  0E00               	movlw	0
  1300  0002B8  6F5C               	movwf	92,b	;volatile
  1301                           
  1302                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  1303  0002BA  0E07               	movlw	7
  1304  0002BC  6F5F               	movwf	95,b	;volatile
  1305                           
  1306                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x2F;
  1307  0002BE  0E2F               	movlw	47
  1308  0002C0  6F5B               	movwf	91,b	;volatile
  1309                           
  1310                           ;mcc_generated_files/pin_manager.c: 87:     WPUB = 0x00;
  1311  0002C2  0E00               	movlw	0
  1312  0002C4  6E85               	movwf	133,c	;volatile
  1313  0002C6                     
  1314                           ; BSR set to: 15
  1315                           ;mcc_generated_files/pin_manager.c: 88:     INTCON2bits.nRBPU = 1;
  1316  0002C6  8EF1               	bsf	241,7,c	;volatile
  1317  0002C8                     
  1318                           ; BSR set to: 15
  1319  0002C8  0012               	return		;funcret
  1320  0002CA                     __end_of_PIN_MANAGER_Initialize:
  1321                           	callstack 0
  1322                           
  1323 ;; *************** function _OSCILLATOR_Initialize *****************
  1324 ;; Defined at:
  1325 ;;		line 59 in file "mcc_generated_files/mcc.c"
  1326 ;; Parameters:    Size  Location     Type
  1327 ;;		None
  1328 ;; Auto vars:     Size  Location     Type
  1329 ;;		None
  1330 ;; Return value:  Size  Location     Type
  1331 ;;                  1    wreg      void 
  1332 ;; Registers used:
  1333 ;;		wreg, status,2
  1334 ;; Tracked objects:
  1335 ;;		On entry : 0/0
  1336 ;;		On exit  : 0/0
  1337 ;;		Unchanged: 0/0
  1338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1339 ;;      Params:         0       0       0       0       0       0       0       0       0
  1340 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1341 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1342 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1343 ;;Total ram usage:        0 bytes
  1344 ;; Hardware stack levels used:    1
  1345 ;; Hardware stack levels required when called:    3
  1346 ;; This function calls:
  1347 ;;		Nothing
  1348 ;; This function is called by:
  1349 ;;		_SYSTEM_Initialize
  1350 ;; This function uses a non-reentrant model
  1351 ;;
  1352                           
  1353                           	psect	text14
  1354  000388                     __ptext14:
  1355                           	callstack 0
  1356  000388                     _OSCILLATOR_Initialize:
  1357                           	callstack 26
  1358  000388                     
  1359                           ;mcc_generated_files/mcc.c: 62:     OSCCON = 0x60;
  1360  000388  0E60               	movlw	96
  1361  00038A  6ED3               	movwf	211,c	;volatile
  1362                           
  1363                           ;mcc_generated_files/mcc.c: 64:     OSCCON2 = 0x00;
  1364  00038C  0E00               	movlw	0
  1365  00038E  6ED2               	movwf	210,c	;volatile
  1366                           
  1367                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x00;
  1368  000390  0E00               	movlw	0
  1369  000392  6E9B               	movwf	155,c	;volatile
  1370                           
  1371                           ;mcc_generated_files/mcc.c: 68:     ACTCON = 0x00;
  1372  000394  0E00               	movlw	0
  1373  000396  6EB5               	movwf	181,c	;volatile
  1374  000398  0012               	return		;funcret
  1375  00039A                     __end_of_OSCILLATOR_Initialize:
  1376                           	callstack 0
  1377                           
  1378 ;; *************** function _INTERRUPT_Initialize *****************
  1379 ;; Defined at:
  1380 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  1381 ;; Parameters:    Size  Location     Type
  1382 ;;		None
  1383 ;; Auto vars:     Size  Location     Type
  1384 ;;		None
  1385 ;; Return value:  Size  Location     Type
  1386 ;;                  1    wreg      void 
  1387 ;; Registers used:
  1388 ;;		None
  1389 ;; Tracked objects:
  1390 ;;		On entry : 0/0
  1391 ;;		On exit  : 0/0
  1392 ;;		Unchanged: 0/0
  1393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1394 ;;      Params:         0       0       0       0       0       0       0       0       0
  1395 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1396 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1397 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1398 ;;Total ram usage:        0 bytes
  1399 ;; Hardware stack levels used:    1
  1400 ;; Hardware stack levels required when called:    3
  1401 ;; This function calls:
  1402 ;;		Nothing
  1403 ;; This function is called by:
  1404 ;;		_SYSTEM_Initialize
  1405 ;; This function uses a non-reentrant model
  1406 ;;
  1407                           
  1408                           	psect	text15
  1409  0003D4                     __ptext15:
  1410                           	callstack 0
  1411  0003D4                     _INTERRUPT_Initialize:
  1412                           	callstack 26
  1413  0003D4                     
  1414                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  1415  0003D4  9ED0               	bcf	208,7,c	;volatile
  1416  0003D6  0012               	return		;funcret
  1417  0003D8                     __end_of_INTERRUPT_Initialize:
  1418                           	callstack 0
  1419                           
  1420 ;; *************** function _INTERRUPT_InterruptManager *****************
  1421 ;; Defined at:
  1422 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  1423 ;; Parameters:    Size  Location     Type
  1424 ;;		None
  1425 ;; Auto vars:     Size  Location     Type
  1426 ;;		None
  1427 ;; Return value:  Size  Location     Type
  1428 ;;                  1    wreg      void 
  1429 ;; Registers used:
  1430 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  1431 ;; Tracked objects:
  1432 ;;		On entry : 0/0
  1433 ;;		On exit  : 0/0
  1434 ;;		Unchanged: 0/0
  1435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1436 ;;      Params:         0       0       0       0       0       0       0       0       0
  1437 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1438 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1439 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1440 ;;Total ram usage:        2 bytes
  1441 ;; Hardware stack levels used:    1
  1442 ;; Hardware stack levels required when called:    2
  1443 ;; This function calls:
  1444 ;;		_TMR0_ISR
  1445 ;; This function is called by:
  1446 ;;		Interrupt level 2
  1447 ;; This function uses a non-reentrant model
  1448 ;;
  1449                           
  1450                           	psect	intcode
  1451  000008                     __pintcode:
  1452                           	callstack 0
  1453  000008                     _INTERRUPT_InterruptManager:
  1454                           	callstack 23
  1455                           
  1456                           ;incstack = 0
  1457  000008  8214               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1458  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
  1459  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  1460  000012                     
  1461                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  1462  000012  AAF2               	btfss	242,5,c	;volatile
  1463  000014  EF0E  F000         	goto	i2u9_41
  1464  000018  EF10  F000         	goto	i2u9_40
  1465  00001C                     i2u9_41:
  1466  00001C  EF19  F000         	goto	i2l215
  1467  000020                     i2u9_40:
  1468  000020  A4F2               	btfss	242,2,c	;volatile
  1469  000022  EF15  F000         	goto	i2u10_41
  1470  000026  EF17  F000         	goto	i2u10_40
  1471  00002A                     i2u10_41:
  1472  00002A  EF19  F000         	goto	i2l215
  1473  00002E                     i2u10_40:
  1474  00002E                     
  1475                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
  1476  00002E  EC65  F001         	call	_TMR0_ISR	;wreg free
  1477  000032                     i2l215:
  1478  000032  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  1479  000036  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  1480  00003A  9214               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1481  00003C  0011               	retfie		f
  1482  00003E                     __end_of_INTERRUPT_InterruptManager:
  1483                           	callstack 0
  1484                           
  1485 ;; *************** function _TMR0_ISR *****************
  1486 ;; Defined at:
  1487 ;;		line 136 in file "mcc_generated_files/tmr0.c"
  1488 ;; Parameters:    Size  Location     Type
  1489 ;;		None
  1490 ;; Auto vars:     Size  Location     Type
  1491 ;;		None
  1492 ;; Return value:  Size  Location     Type
  1493 ;;                  1    wreg      void 
  1494 ;; Registers used:
  1495 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  1496 ;; Tracked objects:
  1497 ;;		On entry : 0/0
  1498 ;;		On exit  : 0/0
  1499 ;;		Unchanged: 0/0
  1500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1501 ;;      Params:         0       0       0       0       0       0       0       0       0
  1502 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1503 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1504 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1505 ;;Total ram usage:        0 bytes
  1506 ;; Hardware stack levels used:    1
  1507 ;; Hardware stack levels required when called:    1
  1508 ;; This function calls:
  1509 ;;		Absolute function
  1510 ;;		_TMR0_DefaultInterruptHandler
  1511 ;; This function is called by:
  1512 ;;		_INTERRUPT_InterruptManager
  1513 ;; This function uses a non-reentrant model
  1514 ;;
  1515                           
  1516                           	psect	text17
  1517  0002CA                     __ptext17:
  1518                           	callstack 0
  1519  0002CA                     _TMR0_ISR:
  1520                           	callstack 23
  1521  0002CA                     
  1522                           ;mcc_generated_files/tmr0.c: 140:     INTCONbits.TMR0IF = 0;
  1523  0002CA  94F2               	bcf	242,2,c	;volatile
  1524  0002CC                     
  1525                           ;mcc_generated_files/tmr0.c: 144:     TMR0H = timer0ReloadVal >> 8;
  1526  0002CC  5011               	movf	(_timer0ReloadVal+1)^0,w,c	;volatile
  1527  0002CE  6ED7               	movwf	215,c	;volatile
  1528  0002D0                     
  1529                           ;mcc_generated_files/tmr0.c: 145:     TMR0L = (uint8_t) timer0ReloadVal;
  1530  0002D0  C010  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  1531  0002D4                     
  1532                           ;mcc_generated_files/tmr0.c: 147:     if(TMR0_InterruptHandler)
  1533  0002D4  5012               	movf	_TMR0_InterruptHandler^0,w,c
  1534  0002D6  1013               	iorwf	(_TMR0_InterruptHandler+1)^0,w,c
  1535  0002D8  B4D8               	btfsc	status,2,c
  1536  0002DA  EF71  F001         	goto	i2u2_41
  1537  0002DE  EF73  F001         	goto	i2u2_40
  1538  0002E2                     i2u2_41:
  1539  0002E2  EF80  F001         	goto	i2l40
  1540  0002E6                     i2u2_40:
  1541  0002E6                     
  1542                           ;mcc_generated_files/tmr0.c: 148:     {;mcc_generated_files/tmr0.c: 149:         TMR0_In
      +                          terruptHandler();
  1543  0002E6  D802               	call	i2u3_48
  1544  0002E8  EF80  F001         	goto	i2u3_49
  1545  0002EC                     i2u3_48:
  1546  0002EC  0005               	push	
  1547  0002EE  6EFA               	movwf	pclath,c
  1548  0002F0  5012               	movf	_TMR0_InterruptHandler^0,w,c
  1549  0002F2  6EFD               	movwf	tosl,c
  1550  0002F4  5013               	movf	(_TMR0_InterruptHandler+1)^0,w,c
  1551  0002F6  6EFE               	movwf	tosh,c
  1552  0002F8  50F8               	movf	tblptru,w,c
  1553  0002FA  6EFF               	movwf	tosu,c
  1554  0002FC  50FA               	movf	pclath,w,c
  1555  0002FE  0012               	return		;indir
  1556  000300                     i2u3_49:
  1557  000300                     i2l40:
  1558  000300  0012               	return		;funcret
  1559  000302                     __end_of_TMR0_ISR:
  1560                           	callstack 0
  1561                           
  1562 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  1563 ;; Defined at:
  1564 ;;		line 160 in file "mcc_generated_files/tmr0.c"
  1565 ;; Parameters:    Size  Location     Type
  1566 ;;		None
  1567 ;; Auto vars:     Size  Location     Type
  1568 ;;		None
  1569 ;; Return value:  Size  Location     Type
  1570 ;;                  1    wreg      void 
  1571 ;; Registers used:
  1572 ;;		None
  1573 ;; Tracked objects:
  1574 ;;		On entry : 0/0
  1575 ;;		On exit  : 0/0
  1576 ;;		Unchanged: 0/0
  1577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1578 ;;      Params:         0       0       0       0       0       0       0       0       0
  1579 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1580 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1581 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1582 ;;Total ram usage:        0 bytes
  1583 ;; Hardware stack levels used:    1
  1584 ;; This function calls:
  1585 ;;		Nothing
  1586 ;; This function is called by:
  1587 ;;		_TMR0_Initialize
  1588 ;;		_TMR0_ISR
  1589 ;; This function uses a non-reentrant model
  1590 ;;
  1591                           
  1592                           	psect	text18
  1593  0003D8                     __ptext18:
  1594                           	callstack 0
  1595  0003D8                     _TMR0_DefaultInterruptHandler:
  1596                           	callstack 23
  1597  0003D8  0012               	return		;funcret
  1598  0003DA                     __end_of_TMR0_DefaultInterruptHandler:
  1599                           	callstack 0
  1600  0000                     
  1601                           	psect	text19
  1602  000000                     __ptext19:
  1603                           	callstack 0
  1604  000000                     
  1605                           	psect	rparam
  1606  0000                     
  1607                           	psect	temp
  1608  000014                     btemp:
  1609                           	callstack 0
  1610  000014                     	ds	1
  1611  0000                     int$flags	set	btemp
  1612  0000                     wtemp8	set	btemp+1
  1613  0000                     ttemp5	set	btemp+1
  1614  0000                     ttemp6	set	btemp+4
  1615  0000                     ttemp7	set	btemp+8
  1616                           
  1617                           	psect	idloc
  1618                           
  1619                           ;Config register IDLOC0 @ 0x200000
  1620                           ;	unspecified, using default values
  1621  200000                     	org	2097152
  1622  200000  FF                 	db	255
  1623                           
  1624                           ;Config register IDLOC1 @ 0x200001
  1625                           ;	unspecified, using default values
  1626  200001                     	org	2097153
  1627  200001  FF                 	db	255
  1628                           
  1629                           ;Config register IDLOC2 @ 0x200002
  1630                           ;	unspecified, using default values
  1631  200002                     	org	2097154
  1632  200002  FF                 	db	255
  1633                           
  1634                           ;Config register IDLOC3 @ 0x200003
  1635                           ;	unspecified, using default values
  1636  200003                     	org	2097155
  1637  200003  FF                 	db	255
  1638                           
  1639                           ;Config register IDLOC4 @ 0x200004
  1640                           ;	unspecified, using default values
  1641  200004                     	org	2097156
  1642  200004  FF                 	db	255
  1643                           
  1644                           ;Config register IDLOC5 @ 0x200005
  1645                           ;	unspecified, using default values
  1646  200005                     	org	2097157
  1647  200005  FF                 	db	255
  1648                           
  1649                           ;Config register IDLOC6 @ 0x200006
  1650                           ;	unspecified, using default values
  1651  200006                     	org	2097158
  1652  200006  FF                 	db	255
  1653                           
  1654                           ;Config register IDLOC7 @ 0x200007
  1655                           ;	unspecified, using default values
  1656  200007                     	org	2097159
  1657  200007  FF                 	db	255
  1658                           
  1659                           	psect	config
  1660                           
  1661                           ;Config register CONFIG1L @ 0x300000
  1662                           ;	PLL Selection
  1663                           ;	PLLSEL = PLL4X, 4x clock multiplier
  1664                           ;	PLL Enable Configuration bit
  1665                           ;	CFGPLLEN = OFF, PLL Disabled (firmware controlled)
  1666                           ;	CPU System Clock Postscaler
  1667                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
  1668                           ;	Low Speed USB mode with 48 MHz system clock
  1669                           ;	LS48MHZ = SYS24X4, System clock at 24 MHz, USB clock divider is set to 4
  1670  300000                     	org	3145728
  1671  300000  00                 	db	0
  1672                           
  1673                           ;Config register CONFIG1H @ 0x300001
  1674                           ;	Oscillator Selection
  1675                           ;	FOSC = INTOSCIO, Internal oscillator
  1676                           ;	Primary Oscillator Shutdown
  1677                           ;	PCLKEN = ON, Primary oscillator enabled
  1678                           ;	Fail-Safe Clock Monitor
  1679                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1680                           ;	Internal/External Oscillator Switchover
  1681                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1682  300001                     	org	3145729
  1683  300001  28                 	db	40
  1684                           
  1685                           ;Config register CONFIG2L @ 0x300002
  1686                           ;	Power-up Timer Enable
  1687                           ;	nPWRTEN = OFF, Power up timer disabled
  1688                           ;	Brown-out Reset Enable
  1689                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
  1690                           ;	Brown-out Reset Voltage
  1691                           ;	BORV = 190, BOR set to 1.9V nominal
  1692                           ;	Low-Power Brown-out Reset
  1693                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
  1694  300002                     	org	3145730
  1695  300002  5F                 	db	95
  1696                           
  1697                           ;Config register CONFIG2H @ 0x300003
  1698                           ;	Watchdog Timer Enable bits
  1699                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  1700                           ;	Watchdog Timer Postscaler
  1701                           ;	WDTPS = 32768, 1:32768
  1702  300003                     	org	3145731
  1703  300003  3C                 	db	60
  1704                           
  1705                           ; Padding undefined space
  1706  300004                     	org	3145732
  1707  300004  FF                 	db	255
  1708                           
  1709                           ;Config register CONFIG3H @ 0x300005
  1710                           ;	CCP2 MUX bit
  1711                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  1712                           ;	PORTB A/D Enable bit
  1713                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  1714                           ;	Timer3 Clock Input MUX bit
  1715                           ;	T3CMX = RC0, T3CKI function is on RC0
  1716                           ;	SDO Output MUX bit
  1717                           ;	SDOMX = RB3, SDO function is on RB3
  1718                           ;	Master Clear Reset Pin Enable
  1719                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
  1720  300005                     	org	3145733
  1721  300005  D3                 	db	211
  1722                           
  1723                           ;Config register CONFIG4L @ 0x300006
  1724                           ;	Stack Full/Underflow Reset
  1725                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1726                           ;	Single-Supply ICSP Enable bit
  1727                           ;	LVP = OFF, Single-Supply ICSP disabled
  1728                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  1729                           ;	ICPRT = OFF, ICPORT disabled
  1730                           ;	Extended Instruction Set Enable bit
  1731                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
  1732                           ;	Background Debugger Enable bit
  1733                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  1734  300006                     	org	3145734
  1735  300006  81                 	db	129
  1736                           
  1737                           ; Padding undefined space
  1738  300007                     	org	3145735
  1739  300007  FF                 	db	255
  1740                           
  1741                           ;Config register CONFIG5L @ 0x300008
  1742                           ;	Block 0 Code Protect
  1743                           ;	CP0 = OFF, Block 0 is not code-protected
  1744                           ;	Block 1 Code Protect
  1745                           ;	CP1 = OFF, Block 1 is not code-protected
  1746                           ;	Block 2 Code Protect
  1747                           ;	CP2 = OFF, Block 2 is not code-protected
  1748                           ;	Block 3 Code Protect
  1749                           ;	CP3 = OFF, Block 3 is not code-protected
  1750  300008                     	org	3145736
  1751  300008  0F                 	db	15
  1752                           
  1753                           ;Config register CONFIG5H @ 0x300009
  1754                           ;	Boot Block Code Protect
  1755                           ;	CPB = OFF, Boot block is not code-protected
  1756                           ;	Data EEPROM Code Protect
  1757                           ;	CPD = OFF, Data EEPROM is not code-protected
  1758  300009                     	org	3145737
  1759  300009  C0                 	db	192
  1760                           
  1761                           ;Config register CONFIG6L @ 0x30000A
  1762                           ;	Block 0 Write Protect
  1763                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
  1764                           ;	Block 1 Write Protect
  1765                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
  1766                           ;	Block 2 Write Protect
  1767                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
  1768                           ;	Block 3 Write Protect
  1769                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
  1770  30000A                     	org	3145738
  1771  30000A  0F                 	db	15
  1772                           
  1773                           ;Config register CONFIG6H @ 0x30000B
  1774                           ;	Configuration Registers Write Protect
  1775                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1776                           ;	Boot Block Write Protect
  1777                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
  1778                           ;	Data EEPROM Write Protect
  1779                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1780  30000B                     	org	3145739
  1781  30000B  E0                 	db	224
  1782                           
  1783                           ;Config register CONFIG7L @ 0x30000C
  1784                           ;	Block 0 Table Read Protect
  1785                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
  1786                           ;	Block 1 Table Read Protect
  1787                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
  1788                           ;	Block 2 Table Read Protect
  1789                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
  1790                           ;	Block 3 Table Read Protect
  1791                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
  1792  30000C                     	org	3145740
  1793  30000C  0F                 	db	15
  1794                           
  1795                           ;Config register CONFIG7H @ 0x30000D
  1796                           ;	Boot Block Table Read Protect
  1797                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
  1798  30000D                     	org	3145741
  1799  30000D  40                 	db	64
  1800                           tosu	equ	0xFFF
  1801                           tosh	equ	0xFFE
  1802                           tosl	equ	0xFFD
  1803                           stkptr	equ	0xFFC
  1804                           pclatu	equ	0xFFB
  1805                           pclath	equ	0xFFA
  1806                           pcl	equ	0xFF9
  1807                           tblptru	equ	0xFF8
  1808                           tblptrh	equ	0xFF7
  1809                           tblptrl	equ	0xFF6
  1810                           tablat	equ	0xFF5
  1811                           prodh	equ	0xFF4
  1812                           prodl	equ	0xFF3
  1813                           indf0	equ	0xFEF
  1814                           postinc0	equ	0xFEE
  1815                           postdec0	equ	0xFED
  1816                           preinc0	equ	0xFEC
  1817                           plusw0	equ	0xFEB
  1818                           fsr0h	equ	0xFEA
  1819                           fsr0l	equ	0xFE9
  1820                           wreg	equ	0xFE8
  1821                           indf1	equ	0xFE7
  1822                           postinc1	equ	0xFE6
  1823                           postdec1	equ	0xFE5
  1824                           preinc1	equ	0xFE4
  1825                           plusw1	equ	0xFE3
  1826                           fsr1h	equ	0xFE2
  1827                           fsr1l	equ	0xFE1
  1828                           bsr	equ	0xFE0
  1829                           indf2	equ	0xFDF
  1830                           postinc2	equ	0xFDE
  1831                           postdec2	equ	0xFDD
  1832                           preinc2	equ	0xFDC
  1833                           plusw2	equ	0xFDB
  1834                           fsr2h	equ	0xFDA
  1835                           fsr2l	equ	0xFD9
  1836                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     15      19
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _main->_start_contador
    _start_contador->_segundo
    _segundo->_TMR0_ReadTimer
    _stop_contador->_TMR0_Initialize
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     796
                  _SYSTEM_Initialize
                     _reset_contador
                     _start_contador
                      _stop_contador
 ---------------------------------------------------------------------------------
 (1) _start_contador                                       4     4      0     502
                                             11 COMRAM     4     4      0
                        _TMR0_Reload
                        _prender_num
                      _prender_num_2
                     _reset_contador
                            _segundo
 ---------------------------------------------------------------------------------
 (2) _segundo                                              1     1      0      72
                                             10 COMRAM     1     1      0
                     _TMR0_ReadTimer
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR0_ReadTimer                                       8     6      2      69
                                              2 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (2) _reset_contador                                       0     0      0      98
                      _stop_contador
 ---------------------------------------------------------------------------------
 (1) _stop_contador                                        0     0      0      98
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _prender_num_2                                        4     2      2      98
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _prender_num                                          4     2      2      98
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Reload                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      98
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0      98
                                              4 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           2     2      0       0
                                              0 COMRAM     2     2      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR0_ISR                                             0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _reset_contador
     _stop_contador
       _TMR0_Initialize
         _TMR0_SetInterruptHandler
   _start_contador
     _TMR0_Reload
     _prender_num
     _prender_num_2
     _reset_contador
       _stop_contador
         _TMR0_Initialize
           _TMR0_SetInterruptHandler
     _segundo
       _TMR0_ReadTimer
       _TMR0_StartTimer
   _stop_contador
     _TMR0_Initialize
       _TMR0_SetInterruptHandler

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E      F      13       1       20.2%
STACK                0      0       0       2        0.0%
DATA                 0      0      13       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
ABS                  0      0      13       6        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Mon Sep 07 17:25:32 2020

                         ??_prender_num_2 0005                                        l21 0336  
                                      l30 0374                                        l24 03D2  
                                      l43 03C8                                        l36 03BE  
                                      l65 0386                                        l68 0398  
                         _timer0ReloadVal 0010                                       l107 02C8  
                                     l142 0256                                       l208 03D6  
                                     l163 023A                                       l156 0356  
                                     l166 03B4                                       l184 01C4  
                                     l169 03CE                                       l199 0102  
                                     l921 03BA                                       l923 03D4  
                                     l931 0388                                       l907 03D0  
                                     l925 0286                                       l927 029E  
                                     l919 03B6                                       l929 02C6  
                                     u110 0356                                       u111 0352  
                                     u120 0216                                       u121 0212  
                                     u130 0236                                       u131 0232  
                                     u140 024E                                       u141 024A  
                                     u150 0264                                       u151 0260  
                                     u160 027E                                       u161 027A  
                                     tosl 000FFD                                      l1121 03C0  
                                    l1201 0120                                      l1131 0324  
                                    l1123 0302                                      l1211 0148  
                                    l1203 0128                                      l1133 0326  
                                    l1125 0304                                      l1213 0150  
                                    l1205 0130                                      l1141 036C  
                                    l1135 0332                                      l1127 030C  
                                    l1223 0376                                      l1207 0138  
                                    l1311 00AC                                      l1151 03B0  
                                    l1231 01C6                                      l1129 0322  
                                    l1225 037A                                      l1313 016E  
                                    l1209 0140                                      l1217 0158  
                                    l1145 03CA                                      l1137 0358  
                                    l1161 0356                                      l1153 0338  
                                    l1227 037E                                      l1171 005E  
                                    l1163 0042                                      l1147 03A8  
                                    l1139 0360                                      l1155 0338  
                                    l1251 01FA                                      l1229 0382  
                                    l1181 0086                                      l1173 0066  
                                    l1165 0046                                      l1149 03AC  
                                    l1157 0340                                      l1253 0216  
                                    l1245 01E2                                      l1237 01CE  
                                    l1261 0240                                      l1183 008E  
                                    l1175 006E                                      l1167 004E  
                                    l1159 0340                                      l1255 021A  
                                    l1247 01F2                                      l1239 01DA  
                                    l1263 024E                                      l1193 0104  
                                    l1177 0076                                      l1169 0056  
                                    l1257 0236                                      l1249 01F6  
                                    l1265 0264                                      l1195 0108  
                                    l1179 007E                                      l1187 0096  
                                    l1267 026C                                      l1259 023C  
                                    l1197 0110                                      l1269 0270  
                                    l1199 0118                                      _LATA 000F89  
                                    _LATB 000F8A                                      _LATC 000F8B  
                                    _LATD 000F8C                                      _LATE 000F8D  
                                    i2l40 0300                                      i2l46 03D8  
                                    _WPUB 000F85                                      _main 023C  
                         _TMR0_StartTimer 03D0                                      btemp 0014  
                                    start 003E                              ___param_bank 000000  
                 __end_of_TMR0_Initialize 0338            ??_TMR0_DefaultInterruptHandler 0001  
          __size_of_OSCILLATOR_Initialize 0012             __end_of_OSCILLATOR_Initialize 039A  
                                   ?_main 0001                 TMR0_ReadTimer@readValHigh 000A  
                                   _T0CON 000FD5                                     i2l215 0032  
                                   _TMR0H 000FD7                                     _TMR0L 000FD6  
                                   _PORTB 000F81                                     _PORTD 000F83  
                                   _TRISA 000F92                                     _TRISB 000F93  
                                   _TRISC 000F94                                     _TRISD 000F95  
                                   _TRISE 000F96         __size_of_TMR0_SetInterruptHandler 000A  
               ?_TMR0_SetInterruptHandler 0003                          __end_of_TMR0_ISR 0302  
                         __end_of_segundo 0358                                     pclath 000FFA  
                                   ttemp5 0015                                     ttemp6 0018  
                                   ttemp7 001C                                     status 000FD8  
                                   wtemp8 0015                           __initialization 039A  
                            __end_of_main 0286               ?_INTERRUPT_InterruptManager 0001  
                  __size_of_stop_contador 0006                                    ??_main 0010  
                           __activetblptr 000002                   __end_of_TMR0_StartTimer 03D4  
                                  _ACTCON 000FB5                                    _ANSELA 000F5B  
                                  _ANSELB 000F5C                                    _ANSELC 000F5D  
                                  _ANSELD 000F5E                                    _ANSELE 000F5F  
                        prender_num_2@num 0003                                    i2l1011 02CC  
                                  i2l1013 02D0                                    i2l1015 02D4  
                                  i2l1017 02E6                                    i2l1009 02CA  
                                  i2l1075 0012                                    i2l1077 0020  
                                  i2l1079 002E                                    _OSCCON 000FD3  
                                  i2u2_40 02E6                                    i2u2_41 02E2  
                                  i2u3_48 02EC                                    i2u3_49 0300  
                                  i2u9_40 0020                                    i2u9_41 001C  
                          _start_contador 01C6                              ?_TMR0_Reload 0001  
                        ?_TMR0_Initialize 0001                              ?_prender_num 0003  
                               ??_segundo 000B                                    tblptru 000FF8  
                 __size_of_reset_contador 000E  TMR0_SetInterruptHandler@InterruptHandler 0003  
           __size_of_INTERRUPT_Initialize 0004                         _SYSTEM_Initialize 0376  
                           _stop_contador 03CA                                __accesstop 0060  
                 __end_of__initialization 039A                    __end_of_start_contador 023C  
                      ?_SYSTEM_Initialize 0001                             ___rparam_used 000001  
                          __pcstackCOMRAM 0001                       ??_SYSTEM_Initialize 0007  
                               ?_TMR0_ISR 0001                   __size_of_TMR0_ReadTimer 001E  
                        ?_TMR0_StartTimer 0001                 __end_of_SYSTEM_Initialize 0388  
                          ?_stop_contador 0001                                __pnvCOMRAM 0010  
                         ?_start_contador 0001          __end_of_TMR0_SetInterruptHandler 03CA  
                              ??_TMR0_ISR 0001                     __end_of_prender_num_2 0104  
                                 _OSCCON2 000FD2                                   i2u10_40 002E  
                                 i2u10_41 002A                                   _OSCTUNE 000F9B  
                                 __Hparam 0000                                   __Lparam 0000  
                    __size_of_TMR0_Reload 000A                                   __pcinit 039A  
                                 __ramtop 0800                                   __ptext0 023C  
                                 __ptext1 01C6                                   __ptext2 0338  
                                 __ptext3 03D0                                   __ptext4 0358  
                                 __ptext5 03A8                                   __ptext6 03CA  
                                 __ptext7 0042                                   __ptext8 0104  
                                 __ptext9 03B6                                 _T0CONbits 000FD5  
                   _OSCILLATOR_Initialize 0388                      __size_of_prender_num 00C2  
                ??_PIN_MANAGER_Initialize 0003                                   _segundo 0338  
                          _reset_contador 03A8                           ??_stop_contador 0007  
              __size_of_SYSTEM_Initialize 0012                      end_of_initialization 039A  
                           __Lmediumconst 0000                     TMR0_ReadTimer@readVal 0007  
                          _TMR0_ReadTimer 0358                  _TMR0_SetInterruptHandler 03C0  
                               _PORTCbits 000F82                    __end_of_reset_contador 03B6  
                  __end_of_TMR0_ReadTimer 0376              __end_of_INTERRUPT_Initialize 03D8  
                       __size_of_TMR0_ISR 0038                    ?_OSCILLATOR_Initialize 0001  
                         ?_reset_contador 0001                       start_initialization 039A  
                __size_of_TMR0_Initialize 0036           __size_of_PIN_MANAGER_Initialize 0044  
                        ??_start_contador 000C                           ?_TMR0_ReadTimer 0003  
                   _TMR0_InterruptHandler 0012                  __size_of_TMR0_StartTimer 0004  
                  _PIN_MANAGER_Initialize 0286                                 __pintcode 0008  
            ??_INTERRUPT_InterruptManager 0001                                  ?_segundo 0001  
                    _INTERRUPT_Initialize 03D4                    __size_of_prender_num_2 00C2  
                       ??_TMR0_Initialize 0005       __size_of_INTERRUPT_InterruptManager 0036  
              ??_TMR0_SetInterruptHandler 0005                             ??_TMR0_Reload 0003  
                                _RCONbits 000FD0                                  _TMR0_ISR 02CA  
                TMR0_ReadTimer@readValLow 0009                             ??_prender_num 0005  
                             _INTCON2bits 000FF1                     ?_INTERRUPT_Initialize 0001  
                   __end_of_stop_contador 03D0                                  __Hrparam 0000  
                          prender_num@num 0003                                  __Lrparam 0000  
                 ??_OSCILLATOR_Initialize 0003                         ??_TMR0_StartTimer 0003  
                           _prender_num_2 0042                          ??_reset_contador 0007  
                     __end_of_TMR0_Reload 03C0                       __end_of_prender_num 01C6  
                                __ptext10 0376                                  __ptext11 0302  
                                __ptext12 03C0                                  __ptext13 0286  
                                __ptext14 0388                                  __ptext15 03D4  
                                __ptext17 02CA                                  __ptext18 03D8  
                                __ptext19 0000                          __size_of_segundo 0020  
                           __size_of_main 004A                          ??_TMR0_ReadTimer 0005  
    __end_of_TMR0_DefaultInterruptHandler 03DA     __size_of_TMR0_DefaultInterruptHandler 0002  
            _TMR0_DefaultInterruptHandler 03D8                           start_contador@i 000E  
                         start_contador@j 000C                                  int$flags 0014  
                          ?_prender_num_2 0003        __end_of_INTERRUPT_InterruptManager 003E  
              _INTERRUPT_InterruptManager 0008                                _INTCONbits 000FF2  
                  ??_INTERRUPT_Initialize 0003                                  intlevel2 0000  
                 ?_PIN_MANAGER_Initialize 0001           fp__TMR0_DefaultInterruptHandler 0000  
           ?_TMR0_DefaultInterruptHandler 0001                               _TMR0_Reload 03B6  
                             _prender_num 0104                           _TMR0_Initialize 0302  
          __end_of_PIN_MANAGER_Initialize 02CA                   __size_of_start_contador 0076  
