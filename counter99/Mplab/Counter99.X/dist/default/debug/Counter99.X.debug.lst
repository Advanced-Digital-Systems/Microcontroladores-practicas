

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Tue Sep 08 23:21:58 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    22                           	psect	text14,global,reloc=2,class=CODE,delta=1
    23                           	psect	text15,global,reloc=2,class=CODE,delta=1
    24                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    27                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    28                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    30  0000                     
    31                           ; Version 2.20
    32                           ; Generated 05/05/2020 GMT
    33                           ; 
    34                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC18F45K50 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     
    66                           	psect	nvCOMRAM
    67  000010                     __pnvCOMRAM:
    68                           	callstack 0
    69  000010                     _timer0ReloadVal:
    70                           	callstack 0
    71  000010                     	ds	2
    72  000012                     _TMR0_InterruptHandler:
    73                           	callstack 0
    74  000012                     	ds	2
    75  0000                     _ANSELA	set	3931
    76  0000                     _ANSELE	set	3935
    77  0000                     _ANSELB	set	3932
    78  0000                     _ANSELC	set	3933
    79  0000                     _ANSELD	set	3934
    80  0000                     _PORTCbits	set	3970
    81  0000                     _PORTD	set	3971
    82  0000                     _PORTB	set	3969
    83  0000                     _RCONbits	set	4048
    84  0000                     _INTCON2bits	set	4081
    85  0000                     _WPUB	set	3973
    86  0000                     _TRISD	set	3989
    87  0000                     _TRISC	set	3988
    88  0000                     _TRISB	set	3987
    89  0000                     _TRISA	set	3986
    90  0000                     _TRISE	set	3990
    91  0000                     _LATC	set	3979
    92  0000                     _LATB	set	3978
    93  0000                     _LATA	set	3977
    94  0000                     _LATD	set	3980
    95  0000                     _LATE	set	3981
    96  0000                     _ACTCON	set	4021
    97  0000                     _OSCTUNE	set	3995
    98  0000                     _OSCCON2	set	4050
    99  0000                     _OSCCON	set	4051
   100  0000                     _T0CON	set	4053
   101  0000                     _INTCONbits	set	4082
   102  0000                     _TMR0L	set	4054
   103  0000                     _TMR0H	set	4055
   104  0000                     _T0CONbits	set	4053
   105                           
   106                           ; #config settings
   107                           
   108                           	psect	cinit
   109  000384                     __pcinit:
   110                           	callstack 0
   111  000384                     start_initialization:
   112                           	callstack 0
   113  000384                     __initialization:
   114                           	callstack 0
   115  000384                     end_of_initialization:
   116                           	callstack 0
   117  000384                     __end_of__initialization:
   118                           	callstack 0
   119  000384  9014               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   120  000386  9214               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   121  000388  0E00               	movlw	low (__Lmediumconst shr (0+16))
   122  00038A  6EF8               	movwf	tblptru,c
   123  00038C  0100               	movlb	0
   124  00038E  EFE3  F000         	goto	_main	;jump to C main() function
   125                           
   126                           	psect	cstackCOMRAM
   127  000001                     __pcstackCOMRAM:
   128                           	callstack 0
   129  000001                     ??_INTERRUPT_InterruptManager:
   130  000001                     
   131                           ; 1 bytes @ 0x0
   132  000001                     	ds	2
   133  000003                     ?_TMR0_ReadTimer:
   134                           	callstack 0
   135  000003                     TMR0_SetInterruptHandler@InterruptHandler:
   136                           	callstack 0
   137  000003                     display_unidades@valor:
   138                           	callstack 0
   139  000003                     display_decenas@valor:
   140                           	callstack 0
   141                           
   142                           ; 2 bytes @ 0x2
   143  000003                     	ds	2
   144  000005                     ??_TMR0_Initialize:
   145  000005                     ??_TMR0_ReadTimer:
   146  000005                     ??_display_unidades:
   147  000005                     ??_display_decenas:
   148                           
   149                           ; 1 bytes @ 0x4
   150  000005                     	ds	2
   151  000007                     TMR0_ReadTimer@readVal:
   152                           	callstack 0
   153                           
   154                           ; 2 bytes @ 0x6
   155  000007                     	ds	2
   156  000009                     TMR0_ReadTimer@readValLow:
   157                           	callstack 0
   158                           
   159                           ; 1 bytes @ 0x8
   160  000009                     	ds	1
   161  00000A                     TMR0_ReadTimer@readValHigh:
   162                           	callstack 0
   163                           
   164                           ; 1 bytes @ 0x9
   165  00000A                     	ds	1
   166  00000B                     
   167                           ; 1 bytes @ 0xA
   168  00000B                     	ds	1
   169  00000C                     main@j:
   170                           	callstack 0
   171                           
   172                           ; 2 bytes @ 0xB
   173  00000C                     	ds	2
   174  00000E                     main@i:
   175                           	callstack 0
   176                           
   177                           ; 2 bytes @ 0xD
   178  00000E                     	ds	2
   179                           
   180 ;;
   181 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   182 ;;
   183 ;; *************** function _main *****************
   184 ;; Defined at:
   185 ;;		line 133 in file "main.c"
   186 ;; Parameters:    Size  Location     Type
   187 ;;		None
   188 ;; Auto vars:     Size  Location     Type
   189 ;;  i               2   13[COMRAM] int 
   190 ;;  j               2   11[COMRAM] int 
   191 ;; Return value:  Size  Location     Type
   192 ;;                  1    wreg      void 
   193 ;; Registers used:
   194 ;;		wreg, status,2, status,0, cstack
   195 ;; Tracked objects:
   196 ;;		On entry : 0/0
   197 ;;		On exit  : 0/0
   198 ;;		Unchanged: 0/0
   199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   200 ;;      Params:         0       0       0       0       0       0       0       0       0
   201 ;;      Locals:         4       0       0       0       0       0       0       0       0
   202 ;;      Temps:          0       0       0       0       0       0       0       0       0
   203 ;;      Totals:         4       0       0       0       0       0       0       0       0
   204 ;;Total ram usage:        4 bytes
   205 ;; Hardware stack levels required when called:    6
   206 ;; This function calls:
   207 ;;		_SYSTEM_Initialize
   208 ;;		_TMR0_Reload
   209 ;;		_display_decenas
   210 ;;		_display_unidades
   211 ;;		_enable_display_decenas
   212 ;; This function is called by:
   213 ;;		Startup code after reset
   214 ;; This function uses a non-reentrant model
   215 ;;
   216                           
   217                           	psect	text0
   218  0001C6                     __ptext0:
   219                           	callstack 0
   220  0001C6                     _main:
   221                           	callstack 25
   222  0001C6                     
   223                           ;main.c: 136:     SYSTEM_Initialize();
   224  0001C6  ECB0  F001         	call	_SYSTEM_Initialize	;wreg free
   225  0001CA                     l1187:
   226                           
   227                           ;main.c: 138:     {;main.c: 139:         if(PORTCbits.RC0 == 1){
   228  0001CA  A082               	btfss	130,0,c	;volatile
   229  0001CC  EFEA  F000         	goto	u111
   230  0001D0  EFEC  F000         	goto	u110
   231  0001D4                     u111:
   232  0001D4  EF26  F001         	goto	l182
   233  0001D8                     u110:
   234  0001D8                     
   235                           ;main.c: 140:             for(int j = 0; j < 10; j++){
   236  0001D8  0E00               	movlw	0
   237  0001DA  6E0D               	movwf	(main@j+1)^0,c
   238  0001DC  0E00               	movlw	0
   239  0001DE  6E0C               	movwf	main@j^0,c
   240  0001E0                     l1195:
   241                           
   242                           ;main.c: 141:                 display_decenas(j);
   243  0001E0  C00C  F003         	movff	main@j,display_decenas@valor
   244  0001E4  C00D  F004         	movff	main@j+1,display_decenas@valor+1
   245  0001E8  EC82  F000         	call	_display_decenas	;wreg free
   246  0001EC                     
   247                           ;main.c: 142:                 for(int i = 0; i < 10; i++){
   248  0001EC  0E00               	movlw	0
   249  0001EE  6E0F               	movwf	(main@i+1)^0,c
   250  0001F0  0E00               	movlw	0
   251  0001F2  6E0E               	movwf	main@i^0,c
   252  0001F4                     l1203:
   253                           
   254                           ;main.c: 143:                     display_unidades(i);
   255  0001F4  C00E  F003         	movff	main@i,display_unidades@valor
   256  0001F8  C00F  F004         	movff	main@i+1,display_unidades@valor+1
   257  0001FC  EC21  F000         	call	_display_unidades	;wreg free
   258                           
   259                           ;main.c: 144:                     enable_display_decenas();
   260  000200  EC91  F001         	call	_enable_display_decenas	;wreg free
   261  000204                     
   262                           ;main.c: 145:                     TMR0_Reload();
   263  000204  ECC9  F001         	call	_TMR0_Reload	;wreg free
   264  000208                     
   265                           ;main.c: 146:                 }
   266  000208  4A0E               	infsnz	main@i^0,f,c
   267  00020A  2A0F               	incf	(main@i+1)^0,f,c
   268  00020C  BE0F               	btfsc	(main@i+1)^0,7,c
   269  00020E  EF12  F001         	goto	u121
   270  000212  500F               	movf	(main@i+1)^0,w,c
   271  000214  E109               	bnz	u120
   272  000216  0E0A               	movlw	10
   273  000218  5C0E               	subwf	main@i^0,w,c
   274  00021A  A0D8               	btfss	status,0,c
   275  00021C  EF12  F001         	goto	u121
   276  000220  EF14  F001         	goto	u120
   277  000224                     u121:
   278  000224  EFFA  F000         	goto	l1203
   279  000228                     u120:
   280  000228                     
   281                           ;main.c: 147:             }
   282  000228  4A0C               	infsnz	main@j^0,f,c
   283  00022A  2A0D               	incf	(main@j+1)^0,f,c
   284  00022C  BE0D               	btfsc	(main@j+1)^0,7,c
   285  00022E  EF22  F001         	goto	u131
   286  000232  500D               	movf	(main@j+1)^0,w,c
   287  000234  E109               	bnz	u130
   288  000236  0E0A               	movlw	10
   289  000238  5C0C               	subwf	main@j^0,w,c
   290  00023A  A0D8               	btfss	status,0,c
   291  00023C  EF22  F001         	goto	u131
   292  000240  EF24  F001         	goto	u130
   293  000244                     u131:
   294  000244  EFF0  F000         	goto	l1195
   295  000248                     u130:
   296  000248  EFE5  F000         	goto	l1187
   297  00024C                     l182:
   298  00024C  A282               	btfss	130,1,c	;volatile
   299  00024E  EF2B  F001         	goto	u141
   300  000252  EF2D  F001         	goto	u140
   301  000256                     u141:
   302  000256  EF33  F001         	goto	l188
   303  00025A                     u140:
   304  00025A                     
   305                           ;main.c: 150:             PORTB = 0B00111111;
   306  00025A  0E3F               	movlw	63
   307  00025C  6E81               	movwf	129,c	;volatile
   308                           
   309                           ;main.c: 151:             PORTD = 0B00111111;
   310  00025E  0E3F               	movlw	63
   311  000260  6E83               	movwf	131,c	;volatile
   312                           
   313                           ;main.c: 152:         }
   314  000262  EFE5  F000         	goto	l1187
   315  000266                     l188:
   316  000266  5082               	movf	130,w,c	;volatile
   317  000268  EFE5  F000         	goto	l1187
   318  00026C  EF1F  F000         	goto	start
   319  000270                     __end_of_main:
   320                           	callstack 0
   321                           
   322 ;; *************** function _enable_display_decenas *****************
   323 ;; Defined at:
   324 ;;		line 54 in file "main.c"
   325 ;; Parameters:    Size  Location     Type
   326 ;;		None
   327 ;; Auto vars:     Size  Location     Type
   328 ;;  enable          1    0        _Bool 
   329 ;; Return value:  Size  Location     Type
   330 ;;                  1    wreg      void 
   331 ;; Registers used:
   332 ;;		wreg, status,2, status,0, cstack
   333 ;; Tracked objects:
   334 ;;		On entry : 0/0
   335 ;;		On exit  : 0/0
   336 ;;		Unchanged: 0/0
   337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   338 ;;      Params:         0       0       0       0       0       0       0       0       0
   339 ;;      Locals:         1       0       0       0       0       0       0       0       0
   340 ;;      Temps:          0       0       0       0       0       0       0       0       0
   341 ;;      Totals:         1       0       0       0       0       0       0       0       0
   342 ;;Total ram usage:        1 bytes
   343 ;; Hardware stack levels used:    1
   344 ;; Hardware stack levels required when called:    4
   345 ;; This function calls:
   346 ;;		_TMR0_ReadTimer
   347 ;;		_TMR0_StartTimer
   348 ;; This function is called by:
   349 ;;		_main
   350 ;; This function uses a non-reentrant model
   351 ;;
   352                           
   353                           	psect	text1
   354  000322                     __ptext1:
   355                           	callstack 0
   356  000322                     _enable_display_decenas:
   357                           	callstack 26
   358  000322                     
   359                           ;main.c: 56:     TMR0_StartTimer();
   360  000322  ECD3  F001         	call	_TMR0_StartTimer	;wreg free
   361                           
   362                           ;main.c: 57:     while(TMR0_ReadTimer() != 255){
   363  000326  EF95  F001         	goto	l1121
   364  00032A                     l1119:
   365  00032A                     l1121:
   366                           
   367                           ;main.c: 57:     while(TMR0_ReadTimer() != 255){
   368  00032A  ECA1  F001         	call	_TMR0_ReadTimer	;wreg free
   369  00032E  2803               	incf	?_TMR0_ReadTimer^0,w,c
   370  000330  1004               	iorwf	(?_TMR0_ReadTimer+1)^0,w,c
   371  000332  A4D8               	btfss	status,2,c
   372  000334  EF9E  F001         	goto	u101
   373  000338  EFA0  F001         	goto	u100
   374  00033C                     u101:
   375  00033C  EF95  F001         	goto	l1119
   376  000340                     u100:
   377  000340  0012               	return		;funcret
   378  000342                     __end_of_enable_display_decenas:
   379                           	callstack 0
   380                           
   381 ;; *************** function _TMR0_StartTimer *****************
   382 ;; Defined at:
   383 ;;		line 97 in file "mcc_generated_files/tmr0.c"
   384 ;; Parameters:    Size  Location     Type
   385 ;;		None
   386 ;; Auto vars:     Size  Location     Type
   387 ;;		None
   388 ;; Return value:  Size  Location     Type
   389 ;;                  1    wreg      void 
   390 ;; Registers used:
   391 ;;		None
   392 ;; Tracked objects:
   393 ;;		On entry : 0/0
   394 ;;		On exit  : 0/0
   395 ;;		Unchanged: 0/0
   396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   397 ;;      Params:         0       0       0       0       0       0       0       0       0
   398 ;;      Locals:         0       0       0       0       0       0       0       0       0
   399 ;;      Temps:          0       0       0       0       0       0       0       0       0
   400 ;;      Totals:         0       0       0       0       0       0       0       0       0
   401 ;;Total ram usage:        0 bytes
   402 ;; Hardware stack levels used:    1
   403 ;; Hardware stack levels required when called:    3
   404 ;; This function calls:
   405 ;;		Nothing
   406 ;; This function is called by:
   407 ;;		_enable_display_decenas
   408 ;; This function uses a non-reentrant model
   409 ;;
   410                           
   411                           	psect	text2
   412  0003A6                     __ptext2:
   413                           	callstack 0
   414  0003A6                     _TMR0_StartTimer:
   415                           	callstack 26
   416  0003A6                     
   417                           ;mcc_generated_files/tmr0.c: 100:     T0CONbits.TMR0ON = 1;
   418  0003A6  8ED5               	bsf	213,7,c	;volatile
   419  0003A8  0012               	return		;funcret
   420  0003AA                     __end_of_TMR0_StartTimer:
   421                           	callstack 0
   422                           
   423 ;; *************** function _TMR0_ReadTimer *****************
   424 ;; Defined at:
   425 ;;		line 109 in file "mcc_generated_files/tmr0.c"
   426 ;; Parameters:    Size  Location     Type
   427 ;;		None
   428 ;; Auto vars:     Size  Location     Type
   429 ;;  readVal         2    6[COMRAM] unsigned short 
   430 ;;  readValHigh     1    9[COMRAM] unsigned char 
   431 ;;  readValLow      1    8[COMRAM] unsigned char 
   432 ;; Return value:  Size  Location     Type
   433 ;;                  2    2[COMRAM] unsigned short 
   434 ;; Registers used:
   435 ;;		wreg, status,2
   436 ;; Tracked objects:
   437 ;;		On entry : 0/0
   438 ;;		On exit  : 0/0
   439 ;;		Unchanged: 0/0
   440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   441 ;;      Params:         2       0       0       0       0       0       0       0       0
   442 ;;      Locals:         4       0       0       0       0       0       0       0       0
   443 ;;      Temps:          2       0       0       0       0       0       0       0       0
   444 ;;      Totals:         8       0       0       0       0       0       0       0       0
   445 ;;Total ram usage:        8 bytes
   446 ;; Hardware stack levels used:    1
   447 ;; Hardware stack levels required when called:    3
   448 ;; This function calls:
   449 ;;		Nothing
   450 ;; This function is called by:
   451 ;;		_enable_display_decenas
   452 ;; This function uses a non-reentrant model
   453 ;;
   454                           
   455                           	psect	text3
   456  000342                     __ptext3:
   457                           	callstack 0
   458  000342                     _TMR0_ReadTimer:
   459                           	callstack 26
   460  000342                     
   461                           ;mcc_generated_files/tmr0.c: 111:     uint16_t readVal;;mcc_generated_files/tmr0.c: 112:
      +                               uint8_t readValLow;;mcc_generated_files/tmr0.c: 113:     uint8_t readValHigh;;mcc_g
      +                          enerated_files/tmr0.c: 115:     readValLow = TMR0L;
   462  000342  CFD6 F009          	movff	4054,TMR0_ReadTimer@readValLow	;volatile
   463                           
   464                           ;mcc_generated_files/tmr0.c: 116:     readValHigh = TMR0H;
   465  000346  CFD7 F00A          	movff	4055,TMR0_ReadTimer@readValHigh	;volatile
   466  00034A                     
   467                           ;mcc_generated_files/tmr0.c: 117:     readVal = ((uint16_t)readValHigh << 8) + readValLo
      +                          w;
   468  00034A  500A               	movf	TMR0_ReadTimer@readValHigh^0,w,c
   469  00034C  6E05               	movwf	??_TMR0_ReadTimer^0,c
   470  00034E  5009               	movf	TMR0_ReadTimer@readValLow^0,w,c
   471  000350  6E07               	movwf	TMR0_ReadTimer@readVal^0,c
   472  000352  C005  F008         	movff	??_TMR0_ReadTimer,TMR0_ReadTimer@readVal+1
   473  000356                     
   474                           ;mcc_generated_files/tmr0.c: 119:     return readVal;
   475  000356  C007  F003         	movff	TMR0_ReadTimer@readVal,?_TMR0_ReadTimer
   476  00035A  C008  F004         	movff	TMR0_ReadTimer@readVal+1,?_TMR0_ReadTimer+1
   477  00035E  0012               	return		;funcret
   478  000360                     __end_of_TMR0_ReadTimer:
   479                           	callstack 0
   480                           
   481 ;; *************** function _display_unidades *****************
   482 ;; Defined at:
   483 ;;		line 64 in file "main.c"
   484 ;; Parameters:    Size  Location     Type
   485 ;;  valor           2    2[COMRAM] int 
   486 ;; Auto vars:     Size  Location     Type
   487 ;;		None
   488 ;; Return value:  Size  Location     Type
   489 ;;                  1    wreg      void 
   490 ;; Registers used:
   491 ;;		wreg, status,2, status,0
   492 ;; Tracked objects:
   493 ;;		On entry : 0/0
   494 ;;		On exit  : 0/0
   495 ;;		Unchanged: 0/0
   496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   497 ;;      Params:         2       0       0       0       0       0       0       0       0
   498 ;;      Locals:         0       0       0       0       0       0       0       0       0
   499 ;;      Temps:          2       0       0       0       0       0       0       0       0
   500 ;;      Totals:         4       0       0       0       0       0       0       0       0
   501 ;;Total ram usage:        4 bytes
   502 ;; Hardware stack levels used:    1
   503 ;; Hardware stack levels required when called:    3
   504 ;; This function calls:
   505 ;;		Nothing
   506 ;; This function is called by:
   507 ;;		_main
   508 ;; This function uses a non-reentrant model
   509 ;;
   510                           
   511                           	psect	text4
   512  000042                     __ptext4:
   513                           	callstack 0
   514  000042                     _display_unidades:
   515                           	callstack 27
   516  000042                     
   517                           ;main.c: 65:     switch(valor) {
   518  000042  EF4B  F000         	goto	l1149
   519  000046                     l1127:
   520                           
   521                           ;main.c: 67:             PORTB = 0B00111111;
   522  000046  0E3F               	movlw	63
   523  000048  6E81               	movwf	129,c	;volatile
   524                           
   525                           ;main.c: 68:             break;
   526  00004A  EF81  F000         	goto	l161
   527  00004E                     l1129:
   528                           
   529                           ;main.c: 70:             PORTB = 0B00000110;
   530  00004E  0E06               	movlw	6
   531  000050  6E81               	movwf	129,c	;volatile
   532                           
   533                           ;main.c: 71:             break;
   534  000052  EF81  F000         	goto	l161
   535  000056                     l1131:
   536                           
   537                           ;main.c: 73:             PORTB = 0B01011011;
   538  000056  0E5B               	movlw	91
   539  000058  6E81               	movwf	129,c	;volatile
   540                           
   541                           ;main.c: 74:             break;
   542  00005A  EF81  F000         	goto	l161
   543  00005E                     l1133:
   544                           
   545                           ;main.c: 76:             PORTB = 0B01001111;
   546  00005E  0E4F               	movlw	79
   547  000060  6E81               	movwf	129,c	;volatile
   548                           
   549                           ;main.c: 77:             break;
   550  000062  EF81  F000         	goto	l161
   551  000066                     l1135:
   552                           
   553                           ;main.c: 79:             PORTB = 0B01100110;
   554  000066  0E66               	movlw	102
   555  000068  6E81               	movwf	129,c	;volatile
   556                           
   557                           ;main.c: 80:             break;
   558  00006A  EF81  F000         	goto	l161
   559  00006E                     l1137:
   560                           
   561                           ;main.c: 82:             PORTB = 0B01101101;
   562  00006E  0E6D               	movlw	109
   563  000070  6E81               	movwf	129,c	;volatile
   564                           
   565                           ;main.c: 83:             break;
   566  000072  EF81  F000         	goto	l161
   567  000076                     l1139:
   568                           
   569                           ;main.c: 85:             PORTB = 0B01111101;
   570  000076  0E7D               	movlw	125
   571  000078  6E81               	movwf	129,c	;volatile
   572                           
   573                           ;main.c: 86:             break;
   574  00007A  EF81  F000         	goto	l161
   575  00007E                     l1141:
   576                           
   577                           ;main.c: 88:             PORTB = 0B00000111;
   578  00007E  0E07               	movlw	7
   579  000080  6E81               	movwf	129,c	;volatile
   580                           
   581                           ;main.c: 89:             break;
   582  000082  EF81  F000         	goto	l161
   583  000086                     l1143:
   584                           
   585                           ;main.c: 91:             PORTB = 0B01111111;
   586  000086  0E7F               	movlw	127
   587  000088  6E81               	movwf	129,c	;volatile
   588                           
   589                           ;main.c: 92:             break;
   590  00008A  EF81  F000         	goto	l161
   591  00008E                     l1145:
   592                           
   593                           ;main.c: 94:             PORTB = 0B01100111;
   594  00008E  0E67               	movlw	103
   595  000090  6E81               	movwf	129,c	;volatile
   596                           
   597                           ;main.c: 95:             break;
   598  000092  EF81  F000         	goto	l161
   599  000096                     l1149:
   600  000096  C003  F005         	movff	display_unidades@valor,??_display_unidades
   601  00009A  C004  F006         	movff	display_unidades@valor+1,??_display_unidades+1
   602                           
   603                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   604                           ; Switch size 1, requested type "simple"
   605                           ; Number of cases is 1, Range of values is 0 to 0
   606                           ; switch strategies available:
   607                           ; Name         Instructions Cycles
   608                           ; simple_byte            4     3 (average)
   609                           ;	Chosen strategy is simple_byte
   610  00009E  5006               	movf	(??_display_unidades+1)^0,w,c
   611  0000A0  0A00               	xorlw	0	; case 0
   612  0000A2  B4D8               	btfsc	status,2,c
   613  0000A4  EF56  F000         	goto	l1257
   614  0000A8  EF81  F000         	goto	l161
   615  0000AC                     l1257:
   616                           
   617                           ; Switch size 1, requested type "simple"
   618                           ; Number of cases is 10, Range of values is 0 to 9
   619                           ; switch strategies available:
   620                           ; Name         Instructions Cycles
   621                           ; simple_byte           31    16 (average)
   622                           ;	Chosen strategy is simple_byte
   623  0000AC  5005               	movf	??_display_unidades^0,w,c
   624  0000AE  0A00               	xorlw	0	; case 0
   625  0000B0  B4D8               	btfsc	status,2,c
   626  0000B2  EF23  F000         	goto	l1127
   627  0000B6  0A01               	xorlw	1	; case 1
   628  0000B8  B4D8               	btfsc	status,2,c
   629  0000BA  EF27  F000         	goto	l1129
   630  0000BE  0A03               	xorlw	3	; case 2
   631  0000C0  B4D8               	btfsc	status,2,c
   632  0000C2  EF2B  F000         	goto	l1131
   633  0000C6  0A01               	xorlw	1	; case 3
   634  0000C8  B4D8               	btfsc	status,2,c
   635  0000CA  EF2F  F000         	goto	l1133
   636  0000CE  0A07               	xorlw	7	; case 4
   637  0000D0  B4D8               	btfsc	status,2,c
   638  0000D2  EF33  F000         	goto	l1135
   639  0000D6  0A01               	xorlw	1	; case 5
   640  0000D8  B4D8               	btfsc	status,2,c
   641  0000DA  EF37  F000         	goto	l1137
   642  0000DE  0A03               	xorlw	3	; case 6
   643  0000E0  B4D8               	btfsc	status,2,c
   644  0000E2  EF3B  F000         	goto	l1139
   645  0000E6  0A01               	xorlw	1	; case 7
   646  0000E8  B4D8               	btfsc	status,2,c
   647  0000EA  EF3F  F000         	goto	l1141
   648  0000EE  0A0F               	xorlw	15	; case 8
   649  0000F0  B4D8               	btfsc	status,2,c
   650  0000F2  EF43  F000         	goto	l1143
   651  0000F6  0A01               	xorlw	1	; case 9
   652  0000F8  B4D8               	btfsc	status,2,c
   653  0000FA  EF47  F000         	goto	l1145
   654  0000FE  EF81  F000         	goto	l161
   655  000102                     l161:
   656  000102  0012               	return		;funcret
   657  000104                     __end_of_display_unidades:
   658                           	callstack 0
   659                           
   660 ;; *************** function _display_decenas *****************
   661 ;; Defined at:
   662 ;;		line 99 in file "main.c"
   663 ;; Parameters:    Size  Location     Type
   664 ;;  valor           2    2[COMRAM] int 
   665 ;; Auto vars:     Size  Location     Type
   666 ;;		None
   667 ;; Return value:  Size  Location     Type
   668 ;;                  1    wreg      void 
   669 ;; Registers used:
   670 ;;		wreg, status,2, status,0
   671 ;; Tracked objects:
   672 ;;		On entry : 0/0
   673 ;;		On exit  : 0/0
   674 ;;		Unchanged: 0/0
   675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   676 ;;      Params:         2       0       0       0       0       0       0       0       0
   677 ;;      Locals:         0       0       0       0       0       0       0       0       0
   678 ;;      Temps:          2       0       0       0       0       0       0       0       0
   679 ;;      Totals:         4       0       0       0       0       0       0       0       0
   680 ;;Total ram usage:        4 bytes
   681 ;; Hardware stack levels used:    1
   682 ;; Hardware stack levels required when called:    3
   683 ;; This function calls:
   684 ;;		Nothing
   685 ;; This function is called by:
   686 ;;		_main
   687 ;; This function uses a non-reentrant model
   688 ;;
   689                           
   690                           	psect	text5
   691  000104                     __ptext5:
   692                           	callstack 0
   693  000104                     _display_decenas:
   694                           	callstack 27
   695  000104                     
   696                           ;main.c: 100:     switch(valor) {
   697  000104  EFAC  F000         	goto	l1179
   698  000108                     l1157:
   699                           
   700                           ;main.c: 102:             PORTD = 0B00111111;
   701  000108  0E3F               	movlw	63
   702  00010A  6E83               	movwf	131,c	;volatile
   703                           
   704                           ;main.c: 103:             break;
   705  00010C  EFE2  F000         	goto	l176
   706  000110                     l1159:
   707                           
   708                           ;main.c: 105:             PORTD = 0B00000110;
   709  000110  0E06               	movlw	6
   710  000112  6E83               	movwf	131,c	;volatile
   711                           
   712                           ;main.c: 106:             break;
   713  000114  EFE2  F000         	goto	l176
   714  000118                     l1161:
   715                           
   716                           ;main.c: 108:             PORTD = 0B01011011;
   717  000118  0E5B               	movlw	91
   718  00011A  6E83               	movwf	131,c	;volatile
   719                           
   720                           ;main.c: 109:             break;
   721  00011C  EFE2  F000         	goto	l176
   722  000120                     l1163:
   723                           
   724                           ;main.c: 111:             PORTD = 0B01001111;
   725  000120  0E4F               	movlw	79
   726  000122  6E83               	movwf	131,c	;volatile
   727                           
   728                           ;main.c: 112:             break;
   729  000124  EFE2  F000         	goto	l176
   730  000128                     l1165:
   731                           
   732                           ;main.c: 114:             PORTD = 0B01100110;
   733  000128  0E66               	movlw	102
   734  00012A  6E83               	movwf	131,c	;volatile
   735                           
   736                           ;main.c: 115:             break;
   737  00012C  EFE2  F000         	goto	l176
   738  000130                     l1167:
   739                           
   740                           ;main.c: 117:             PORTD = 0B01101101;
   741  000130  0E6D               	movlw	109
   742  000132  6E83               	movwf	131,c	;volatile
   743                           
   744                           ;main.c: 118:             break;
   745  000134  EFE2  F000         	goto	l176
   746  000138                     l1169:
   747                           
   748                           ;main.c: 120:             PORTD = 0B01111101;
   749  000138  0E7D               	movlw	125
   750  00013A  6E83               	movwf	131,c	;volatile
   751                           
   752                           ;main.c: 121:             break;
   753  00013C  EFE2  F000         	goto	l176
   754  000140                     l1171:
   755                           
   756                           ;main.c: 123:             PORTD = 0B00000111;
   757  000140  0E07               	movlw	7
   758  000142  6E83               	movwf	131,c	;volatile
   759                           
   760                           ;main.c: 124:             break;
   761  000144  EFE2  F000         	goto	l176
   762  000148                     l1173:
   763                           
   764                           ;main.c: 126:             PORTD = 0B01111111;
   765  000148  0E7F               	movlw	127
   766  00014A  6E83               	movwf	131,c	;volatile
   767                           
   768                           ;main.c: 127:             break;
   769  00014C  EFE2  F000         	goto	l176
   770  000150                     l1175:
   771                           
   772                           ;main.c: 129:             PORTD = 0B01100111;
   773  000150  0E67               	movlw	103
   774  000152  6E83               	movwf	131,c	;volatile
   775                           
   776                           ;main.c: 130:             break;
   777  000154  EFE2  F000         	goto	l176
   778  000158                     l1179:
   779  000158  C003  F005         	movff	display_decenas@valor,??_display_decenas
   780  00015C  C004  F006         	movff	display_decenas@valor+1,??_display_decenas+1
   781                           
   782                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   783                           ; Switch size 1, requested type "simple"
   784                           ; Number of cases is 1, Range of values is 0 to 0
   785                           ; switch strategies available:
   786                           ; Name         Instructions Cycles
   787                           ; simple_byte            4     3 (average)
   788                           ;	Chosen strategy is simple_byte
   789  000160  5006               	movf	(??_display_decenas+1)^0,w,c
   790  000162  0A00               	xorlw	0	; case 0
   791  000164  B4D8               	btfsc	status,2,c
   792  000166  EFB7  F000         	goto	l1259
   793  00016A  EFE2  F000         	goto	l176
   794  00016E                     l1259:
   795                           
   796                           ; Switch size 1, requested type "simple"
   797                           ; Number of cases is 10, Range of values is 0 to 9
   798                           ; switch strategies available:
   799                           ; Name         Instructions Cycles
   800                           ; simple_byte           31    16 (average)
   801                           ;	Chosen strategy is simple_byte
   802  00016E  5005               	movf	??_display_decenas^0,w,c
   803  000170  0A00               	xorlw	0	; case 0
   804  000172  B4D8               	btfsc	status,2,c
   805  000174  EF84  F000         	goto	l1157
   806  000178  0A01               	xorlw	1	; case 1
   807  00017A  B4D8               	btfsc	status,2,c
   808  00017C  EF88  F000         	goto	l1159
   809  000180  0A03               	xorlw	3	; case 2
   810  000182  B4D8               	btfsc	status,2,c
   811  000184  EF8C  F000         	goto	l1161
   812  000188  0A01               	xorlw	1	; case 3
   813  00018A  B4D8               	btfsc	status,2,c
   814  00018C  EF90  F000         	goto	l1163
   815  000190  0A07               	xorlw	7	; case 4
   816  000192  B4D8               	btfsc	status,2,c
   817  000194  EF94  F000         	goto	l1165
   818  000198  0A01               	xorlw	1	; case 5
   819  00019A  B4D8               	btfsc	status,2,c
   820  00019C  EF98  F000         	goto	l1167
   821  0001A0  0A03               	xorlw	3	; case 6
   822  0001A2  B4D8               	btfsc	status,2,c
   823  0001A4  EF9C  F000         	goto	l1169
   824  0001A8  0A01               	xorlw	1	; case 7
   825  0001AA  B4D8               	btfsc	status,2,c
   826  0001AC  EFA0  F000         	goto	l1171
   827  0001B0  0A0F               	xorlw	15	; case 8
   828  0001B2  B4D8               	btfsc	status,2,c
   829  0001B4  EFA4  F000         	goto	l1173
   830  0001B8  0A01               	xorlw	1	; case 9
   831  0001BA  B4D8               	btfsc	status,2,c
   832  0001BC  EFA8  F000         	goto	l1175
   833  0001C0  EFE2  F000         	goto	l176
   834  0001C4                     l176:
   835  0001C4  0012               	return		;funcret
   836  0001C6                     __end_of_display_decenas:
   837                           	callstack 0
   838                           
   839 ;; *************** function _TMR0_Reload *****************
   840 ;; Defined at:
   841 ;;		line 129 in file "mcc_generated_files/tmr0.c"
   842 ;; Parameters:    Size  Location     Type
   843 ;;		None
   844 ;; Auto vars:     Size  Location     Type
   845 ;;		None
   846 ;; Return value:  Size  Location     Type
   847 ;;                  1    wreg      void 
   848 ;; Registers used:
   849 ;;		wreg, status,2
   850 ;; Tracked objects:
   851 ;;		On entry : 0/0
   852 ;;		On exit  : 0/0
   853 ;;		Unchanged: 0/0
   854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   855 ;;      Params:         0       0       0       0       0       0       0       0       0
   856 ;;      Locals:         0       0       0       0       0       0       0       0       0
   857 ;;      Temps:          0       0       0       0       0       0       0       0       0
   858 ;;      Totals:         0       0       0       0       0       0       0       0       0
   859 ;;Total ram usage:        0 bytes
   860 ;; Hardware stack levels used:    1
   861 ;; Hardware stack levels required when called:    3
   862 ;; This function calls:
   863 ;;		Nothing
   864 ;; This function is called by:
   865 ;;		_main
   866 ;; This function uses a non-reentrant model
   867 ;;
   868                           
   869                           	psect	text6
   870  000392                     __ptext6:
   871                           	callstack 0
   872  000392                     _TMR0_Reload:
   873                           	callstack 27
   874  000392                     
   875                           ;mcc_generated_files/tmr0.c: 132:     TMR0H = timer0ReloadVal >> 8;
   876  000392  5011               	movf	(_timer0ReloadVal+1)^0,w,c	;volatile
   877  000394  6ED7               	movwf	215,c	;volatile
   878  000396                     
   879                           ;mcc_generated_files/tmr0.c: 133:     TMR0L = (uint8_t) timer0ReloadVal;
   880  000396  C010  FFD6         	movff	_timer0ReloadVal,4054	;volatile
   881  00039A  0012               	return		;funcret
   882  00039C                     __end_of_TMR0_Reload:
   883                           	callstack 0
   884                           
   885 ;; *************** function _SYSTEM_Initialize *****************
   886 ;; Defined at:
   887 ;;		line 50 in file "mcc_generated_files/mcc.c"
   888 ;; Parameters:    Size  Location     Type
   889 ;;		None
   890 ;; Auto vars:     Size  Location     Type
   891 ;;		None
   892 ;; Return value:  Size  Location     Type
   893 ;;                  1    wreg      void 
   894 ;; Registers used:
   895 ;;		wreg, status,2, status,0, cstack
   896 ;; Tracked objects:
   897 ;;		On entry : 0/0
   898 ;;		On exit  : 0/0
   899 ;;		Unchanged: 0/0
   900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   901 ;;      Params:         0       0       0       0       0       0       0       0       0
   902 ;;      Locals:         0       0       0       0       0       0       0       0       0
   903 ;;      Temps:          0       0       0       0       0       0       0       0       0
   904 ;;      Totals:         0       0       0       0       0       0       0       0       0
   905 ;;Total ram usage:        0 bytes
   906 ;; Hardware stack levels used:    1
   907 ;; Hardware stack levels required when called:    5
   908 ;; This function calls:
   909 ;;		_INTERRUPT_Initialize
   910 ;;		_OSCILLATOR_Initialize
   911 ;;		_PIN_MANAGER_Initialize
   912 ;;		_TMR0_Initialize
   913 ;; This function is called by:
   914 ;;		_main
   915 ;; This function uses a non-reentrant model
   916 ;;
   917                           
   918                           	psect	text7
   919  000360                     __ptext7:
   920                           	callstack 0
   921  000360                     _SYSTEM_Initialize:
   922                           	callstack 25
   923  000360                     
   924                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
   925  000360  ECD5  F001         	call	_INTERRUPT_Initialize	;wreg free
   926  000364                     
   927                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
   928  000364  EC38  F001         	call	_PIN_MANAGER_Initialize	;wreg free
   929  000368                     
   930                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
   931  000368  ECB9  F001         	call	_OSCILLATOR_Initialize	;wreg free
   932  00036C                     
   933                           ;mcc_generated_files/mcc.c: 56:     TMR0_Initialize();
   934  00036C  EC76  F001         	call	_TMR0_Initialize	;wreg free
   935  000370  0012               	return		;funcret
   936  000372                     __end_of_SYSTEM_Initialize:
   937                           	callstack 0
   938                           
   939 ;; *************** function _TMR0_Initialize *****************
   940 ;; Defined at:
   941 ;;		line 67 in file "mcc_generated_files/tmr0.c"
   942 ;; Parameters:    Size  Location     Type
   943 ;;		None
   944 ;; Auto vars:     Size  Location     Type
   945 ;;		None
   946 ;; Return value:  Size  Location     Type
   947 ;;                  1    wreg      void 
   948 ;; Registers used:
   949 ;;		wreg, status,2, status,0, cstack
   950 ;; Tracked objects:
   951 ;;		On entry : 0/0
   952 ;;		On exit  : 0/0
   953 ;;		Unchanged: 0/0
   954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   955 ;;      Params:         0       0       0       0       0       0       0       0       0
   956 ;;      Locals:         0       0       0       0       0       0       0       0       0
   957 ;;      Temps:          2       0       0       0       0       0       0       0       0
   958 ;;      Totals:         2       0       0       0       0       0       0       0       0
   959 ;;Total ram usage:        2 bytes
   960 ;; Hardware stack levels used:    1
   961 ;; Hardware stack levels required when called:    4
   962 ;; This function calls:
   963 ;;		_TMR0_SetInterruptHandler
   964 ;; This function is called by:
   965 ;;		_SYSTEM_Initialize
   966 ;; This function uses a non-reentrant model
   967 ;;
   968                           
   969                           	psect	text8
   970  0002EC                     __ptext8:
   971                           	callstack 0
   972  0002EC                     _TMR0_Initialize:
   973                           	callstack 25
   974  0002EC                     
   975                           ;mcc_generated_files/tmr0.c: 72:     T0CONbits.T08BIT = 0;
   976  0002EC  9CD5               	bcf	213,6,c	;volatile
   977  0002EE                     
   978                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0x85;
   979  0002EE  0E85               	movlw	133
   980  0002F0  6ED7               	movwf	215,c	;volatile
   981                           
   982                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0xED;
   983  0002F2  0EED               	movlw	237
   984  0002F4  6ED6               	movwf	214,c	;volatile
   985  0002F6                     
   986                           ;mcc_generated_files/tmr0.c: 82:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
   987  0002F6  50D6               	movf	214,w,c	;volatile
   988  0002F8  CFD7 F005          	movff	4055,??_TMR0_Initialize	;volatile
   989  0002FC  6A06               	clrf	(??_TMR0_Initialize+1)^0,c
   990  0002FE  C005  F006         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
   991  000302  6A05               	clrf	??_TMR0_Initialize^0,c
   992  000304  1005               	iorwf	??_TMR0_Initialize^0,w,c
   993  000306  6E10               	movwf	_timer0ReloadVal^0,c	;volatile
   994  000308  5006               	movf	(??_TMR0_Initialize+1)^0,w,c
   995  00030A  6E11               	movwf	(_timer0ReloadVal+1)^0,c	;volatile
   996  00030C                     
   997                           ;mcc_generated_files/tmr0.c: 85:     INTCONbits.TMR0IF = 0;
   998  00030C  94F2               	bcf	242,2,c	;volatile
   999  00030E                     
  1000                           ;mcc_generated_files/tmr0.c: 88:     INTCONbits.TMR0IE = 1;
  1001  00030E  8AF2               	bsf	242,5,c	;volatile
  1002  000310                     
  1003                           ;mcc_generated_files/tmr0.c: 91:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  1004  000310  0EAE               	movlw	low _TMR0_DefaultInterruptHandler
  1005  000312  6E03               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  1006  000314  0E03               	movlw	high _TMR0_DefaultInterruptHandler
  1007  000316  6E04               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  1008  000318  ECCE  F001         	call	_TMR0_SetInterruptHandler	;wreg free
  1009  00031C                     
  1010                           ;mcc_generated_files/tmr0.c: 94:     T0CON = 0x95;
  1011  00031C  0E95               	movlw	149
  1012  00031E  6ED5               	movwf	213,c	;volatile
  1013  000320  0012               	return		;funcret
  1014  000322                     __end_of_TMR0_Initialize:
  1015                           	callstack 0
  1016                           
  1017 ;; *************** function _TMR0_SetInterruptHandler *****************
  1018 ;; Defined at:
  1019 ;;		line 156 in file "mcc_generated_files/tmr0.c"
  1020 ;; Parameters:    Size  Location     Type
  1021 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
  1022 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  1023 ;; Auto vars:     Size  Location     Type
  1024 ;;		None
  1025 ;; Return value:  Size  Location     Type
  1026 ;;                  1    wreg      void 
  1027 ;; Registers used:
  1028 ;;		wreg, status,2, status,0
  1029 ;; Tracked objects:
  1030 ;;		On entry : 0/0
  1031 ;;		On exit  : 0/0
  1032 ;;		Unchanged: 0/0
  1033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1034 ;;      Params:         2       0       0       0       0       0       0       0       0
  1035 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1036 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1037 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1038 ;;Total ram usage:        2 bytes
  1039 ;; Hardware stack levels used:    1
  1040 ;; Hardware stack levels required when called:    3
  1041 ;; This function calls:
  1042 ;;		Nothing
  1043 ;; This function is called by:
  1044 ;;		_TMR0_Initialize
  1045 ;; This function uses a non-reentrant model
  1046 ;;
  1047                           
  1048                           	psect	text9
  1049  00039C                     __ptext9:
  1050                           	callstack 0
  1051  00039C                     _TMR0_SetInterruptHandler:
  1052                           	callstack 25
  1053  00039C                     
  1054                           ;mcc_generated_files/tmr0.c: 157:     TMR0_InterruptHandler = InterruptHandler;
  1055  00039C  C003  F012         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  1056  0003A0  C004  F013         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  1057  0003A4  0012               	return		;funcret
  1058  0003A6                     __end_of_TMR0_SetInterruptHandler:
  1059                           	callstack 0
  1060                           
  1061 ;; *************** function _PIN_MANAGER_Initialize *****************
  1062 ;; Defined at:
  1063 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1064 ;; Parameters:    Size  Location     Type
  1065 ;;		None
  1066 ;; Auto vars:     Size  Location     Type
  1067 ;;		None
  1068 ;; Return value:  Size  Location     Type
  1069 ;;                  1    wreg      void 
  1070 ;; Registers used:
  1071 ;;		wreg, status,2
  1072 ;; Tracked objects:
  1073 ;;		On entry : 0/0
  1074 ;;		On exit  : 0/0
  1075 ;;		Unchanged: 0/0
  1076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1077 ;;      Params:         0       0       0       0       0       0       0       0       0
  1078 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1079 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1080 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1081 ;;Total ram usage:        0 bytes
  1082 ;; Hardware stack levels used:    1
  1083 ;; Hardware stack levels required when called:    3
  1084 ;; This function calls:
  1085 ;;		Nothing
  1086 ;; This function is called by:
  1087 ;;		_SYSTEM_Initialize
  1088 ;; This function uses a non-reentrant model
  1089 ;;
  1090                           
  1091                           	psect	text10
  1092  000270                     __ptext10:
  1093                           	callstack 0
  1094  000270                     _PIN_MANAGER_Initialize:
  1095                           	callstack 26
  1096  000270                     
  1097                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  1098  000270  0E00               	movlw	0
  1099  000272  6E8D               	movwf	141,c	;volatile
  1100                           
  1101                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  1102  000274  0E00               	movlw	0
  1103  000276  6E8C               	movwf	140,c	;volatile
  1104                           
  1105                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  1106  000278  0E00               	movlw	0
  1107  00027A  6E89               	movwf	137,c	;volatile
  1108                           
  1109                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  1110  00027C  0E00               	movlw	0
  1111  00027E  6E8A               	movwf	138,c	;volatile
  1112                           
  1113                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  1114  000280  0E00               	movlw	0
  1115  000282  6E8B               	movwf	139,c	;volatile
  1116                           
  1117                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  1118  000284  0E07               	movlw	7
  1119  000286  6E96               	movwf	150,c	;volatile
  1120  000288                     
  1121                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
  1122  000288  6892               	setf	146,c	;volatile
  1123                           
  1124                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0x00;
  1125  00028A  0E00               	movlw	0
  1126  00028C  6E93               	movwf	147,c	;volatile
  1127                           
  1128                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xC7;
  1129  00028E  0EC7               	movlw	199
  1130  000290  6E94               	movwf	148,c	;volatile
  1131                           
  1132                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0x00;
  1133  000292  0E00               	movlw	0
  1134  000294  6E95               	movwf	149,c	;volatile
  1135                           
  1136                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x00;
  1137  000296  0E00               	movlw	0
  1138  000298  010F               	movlb	15	; () banked
  1139  00029A  6F5E               	movwf	94,b	;volatile
  1140                           
  1141                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xC0;
  1142  00029C  0EC0               	movlw	192
  1143  00029E  6F5D               	movwf	93,b	;volatile
  1144                           
  1145                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x00;
  1146  0002A0  0E00               	movlw	0
  1147  0002A2  6F5C               	movwf	92,b	;volatile
  1148                           
  1149                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  1150  0002A4  0E07               	movlw	7
  1151  0002A6  6F5F               	movwf	95,b	;volatile
  1152                           
  1153                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x2F;
  1154  0002A8  0E2F               	movlw	47
  1155  0002AA  6F5B               	movwf	91,b	;volatile
  1156                           
  1157                           ;mcc_generated_files/pin_manager.c: 87:     WPUB = 0x00;
  1158  0002AC  0E00               	movlw	0
  1159  0002AE  6E85               	movwf	133,c	;volatile
  1160  0002B0                     
  1161                           ; BSR set to: 15
  1162                           ;mcc_generated_files/pin_manager.c: 88:     INTCON2bits.nRBPU = 1;
  1163  0002B0  8EF1               	bsf	241,7,c	;volatile
  1164  0002B2                     
  1165                           ; BSR set to: 15
  1166  0002B2  0012               	return		;funcret
  1167  0002B4                     __end_of_PIN_MANAGER_Initialize:
  1168                           	callstack 0
  1169                           
  1170 ;; *************** function _OSCILLATOR_Initialize *****************
  1171 ;; Defined at:
  1172 ;;		line 59 in file "mcc_generated_files/mcc.c"
  1173 ;; Parameters:    Size  Location     Type
  1174 ;;		None
  1175 ;; Auto vars:     Size  Location     Type
  1176 ;;		None
  1177 ;; Return value:  Size  Location     Type
  1178 ;;                  1    wreg      void 
  1179 ;; Registers used:
  1180 ;;		wreg, status,2
  1181 ;; Tracked objects:
  1182 ;;		On entry : 0/0
  1183 ;;		On exit  : 0/0
  1184 ;;		Unchanged: 0/0
  1185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1186 ;;      Params:         0       0       0       0       0       0       0       0       0
  1187 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1188 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1189 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1190 ;;Total ram usage:        0 bytes
  1191 ;; Hardware stack levels used:    1
  1192 ;; Hardware stack levels required when called:    3
  1193 ;; This function calls:
  1194 ;;		Nothing
  1195 ;; This function is called by:
  1196 ;;		_SYSTEM_Initialize
  1197 ;; This function uses a non-reentrant model
  1198 ;;
  1199                           
  1200                           	psect	text11
  1201  000372                     __ptext11:
  1202                           	callstack 0
  1203  000372                     _OSCILLATOR_Initialize:
  1204                           	callstack 26
  1205  000372                     
  1206                           ;mcc_generated_files/mcc.c: 62:     OSCCON = 0x60;
  1207  000372  0E60               	movlw	96
  1208  000374  6ED3               	movwf	211,c	;volatile
  1209                           
  1210                           ;mcc_generated_files/mcc.c: 64:     OSCCON2 = 0x00;
  1211  000376  0E00               	movlw	0
  1212  000378  6ED2               	movwf	210,c	;volatile
  1213                           
  1214                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x00;
  1215  00037A  0E00               	movlw	0
  1216  00037C  6E9B               	movwf	155,c	;volatile
  1217                           
  1218                           ;mcc_generated_files/mcc.c: 68:     ACTCON = 0x00;
  1219  00037E  0E00               	movlw	0
  1220  000380  6EB5               	movwf	181,c	;volatile
  1221  000382  0012               	return		;funcret
  1222  000384                     __end_of_OSCILLATOR_Initialize:
  1223                           	callstack 0
  1224                           
  1225 ;; *************** function _INTERRUPT_Initialize *****************
  1226 ;; Defined at:
  1227 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  1228 ;; Parameters:    Size  Location     Type
  1229 ;;		None
  1230 ;; Auto vars:     Size  Location     Type
  1231 ;;		None
  1232 ;; Return value:  Size  Location     Type
  1233 ;;                  1    wreg      void 
  1234 ;; Registers used:
  1235 ;;		None
  1236 ;; Tracked objects:
  1237 ;;		On entry : 0/0
  1238 ;;		On exit  : 0/0
  1239 ;;		Unchanged: 0/0
  1240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1241 ;;      Params:         0       0       0       0       0       0       0       0       0
  1242 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1243 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1244 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1245 ;;Total ram usage:        0 bytes
  1246 ;; Hardware stack levels used:    1
  1247 ;; Hardware stack levels required when called:    3
  1248 ;; This function calls:
  1249 ;;		Nothing
  1250 ;; This function is called by:
  1251 ;;		_SYSTEM_Initialize
  1252 ;; This function uses a non-reentrant model
  1253 ;;
  1254                           
  1255                           	psect	text12
  1256  0003AA                     __ptext12:
  1257                           	callstack 0
  1258  0003AA                     _INTERRUPT_Initialize:
  1259                           	callstack 26
  1260  0003AA                     
  1261                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  1262  0003AA  9ED0               	bcf	208,7,c	;volatile
  1263  0003AC  0012               	return		;funcret
  1264  0003AE                     __end_of_INTERRUPT_Initialize:
  1265                           	callstack 0
  1266                           
  1267 ;; *************** function _INTERRUPT_InterruptManager *****************
  1268 ;; Defined at:
  1269 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  1270 ;; Parameters:    Size  Location     Type
  1271 ;;		None
  1272 ;; Auto vars:     Size  Location     Type
  1273 ;;		None
  1274 ;; Return value:  Size  Location     Type
  1275 ;;                  1    wreg      void 
  1276 ;; Registers used:
  1277 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  1278 ;; Tracked objects:
  1279 ;;		On entry : 0/0
  1280 ;;		On exit  : 0/0
  1281 ;;		Unchanged: 0/0
  1282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1283 ;;      Params:         0       0       0       0       0       0       0       0       0
  1284 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1285 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1286 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1287 ;;Total ram usage:        2 bytes
  1288 ;; Hardware stack levels used:    1
  1289 ;; Hardware stack levels required when called:    2
  1290 ;; This function calls:
  1291 ;;		_TMR0_ISR
  1292 ;; This function is called by:
  1293 ;;		Interrupt level 2
  1294 ;; This function uses a non-reentrant model
  1295 ;;
  1296                           
  1297                           	psect	intcode
  1298  000008                     __pintcode:
  1299                           	callstack 0
  1300  000008                     _INTERRUPT_InterruptManager:
  1301                           	callstack 25
  1302                           
  1303                           ;incstack = 0
  1304  000008  8214               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1305  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
  1306  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  1307  000012                     
  1308                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  1309  000012  AAF2               	btfss	242,5,c	;volatile
  1310  000014  EF0E  F000         	goto	i2u4_41
  1311  000018  EF10  F000         	goto	i2u4_40
  1312  00001C                     i2u4_41:
  1313  00001C  EF19  F000         	goto	i2l126
  1314  000020                     i2u4_40:
  1315  000020  A4F2               	btfss	242,2,c	;volatile
  1316  000022  EF15  F000         	goto	i2u5_41
  1317  000026  EF17  F000         	goto	i2u5_40
  1318  00002A                     i2u5_41:
  1319  00002A  EF19  F000         	goto	i2l126
  1320  00002E                     i2u5_40:
  1321  00002E                     
  1322                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
  1323  00002E  EC5A  F001         	call	_TMR0_ISR	;wreg free
  1324  000032                     i2l126:
  1325  000032  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  1326  000036  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  1327  00003A  9214               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1328  00003C  0011               	retfie		f
  1329  00003E                     __end_of_INTERRUPT_InterruptManager:
  1330                           	callstack 0
  1331                           
  1332 ;; *************** function _TMR0_ISR *****************
  1333 ;; Defined at:
  1334 ;;		line 136 in file "mcc_generated_files/tmr0.c"
  1335 ;; Parameters:    Size  Location     Type
  1336 ;;		None
  1337 ;; Auto vars:     Size  Location     Type
  1338 ;;		None
  1339 ;; Return value:  Size  Location     Type
  1340 ;;                  1    wreg      void 
  1341 ;; Registers used:
  1342 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  1343 ;; Tracked objects:
  1344 ;;		On entry : 0/0
  1345 ;;		On exit  : 0/0
  1346 ;;		Unchanged: 0/0
  1347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1348 ;;      Params:         0       0       0       0       0       0       0       0       0
  1349 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1350 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1351 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1352 ;;Total ram usage:        0 bytes
  1353 ;; Hardware stack levels used:    1
  1354 ;; Hardware stack levels required when called:    1
  1355 ;; This function calls:
  1356 ;;		Absolute function
  1357 ;;		_TMR0_DefaultInterruptHandler
  1358 ;; This function is called by:
  1359 ;;		_INTERRUPT_InterruptManager
  1360 ;; This function uses a non-reentrant model
  1361 ;;
  1362                           
  1363                           	psect	text14
  1364  0002B4                     __ptext14:
  1365                           	callstack 0
  1366  0002B4                     _TMR0_ISR:
  1367                           	callstack 25
  1368  0002B4                     
  1369                           ;mcc_generated_files/tmr0.c: 140:     INTCONbits.TMR0IF = 0;
  1370  0002B4  94F2               	bcf	242,2,c	;volatile
  1371  0002B6                     
  1372                           ;mcc_generated_files/tmr0.c: 144:     TMR0H = timer0ReloadVal >> 8;
  1373  0002B6  5011               	movf	(_timer0ReloadVal+1)^0,w,c	;volatile
  1374  0002B8  6ED7               	movwf	215,c	;volatile
  1375  0002BA                     
  1376                           ;mcc_generated_files/tmr0.c: 145:     TMR0L = (uint8_t) timer0ReloadVal;
  1377  0002BA  C010  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  1378  0002BE                     
  1379                           ;mcc_generated_files/tmr0.c: 147:     if(TMR0_InterruptHandler)
  1380  0002BE  5012               	movf	_TMR0_InterruptHandler^0,w,c
  1381  0002C0  1013               	iorwf	(_TMR0_InterruptHandler+1)^0,w,c
  1382  0002C2  B4D8               	btfsc	status,2,c
  1383  0002C4  EF66  F001         	goto	i2u1_41
  1384  0002C8  EF68  F001         	goto	i2u1_40
  1385  0002CC                     i2u1_41:
  1386  0002CC  EF75  F001         	goto	i2l40
  1387  0002D0                     i2u1_40:
  1388  0002D0                     
  1389                           ;mcc_generated_files/tmr0.c: 148:     {;mcc_generated_files/tmr0.c: 149:         TMR0_In
      +                          terruptHandler();
  1390  0002D0  D802               	call	i2u2_48
  1391  0002D2  EF75  F001         	goto	i2u2_49
  1392  0002D6                     i2u2_48:
  1393  0002D6  0005               	push	
  1394  0002D8  6EFA               	movwf	pclath,c
  1395  0002DA  5012               	movf	_TMR0_InterruptHandler^0,w,c
  1396  0002DC  6EFD               	movwf	tosl,c
  1397  0002DE  5013               	movf	(_TMR0_InterruptHandler+1)^0,w,c
  1398  0002E0  6EFE               	movwf	tosh,c
  1399  0002E2  50F8               	movf	tblptru,w,c
  1400  0002E4  6EFF               	movwf	tosu,c
  1401  0002E6  50FA               	movf	pclath,w,c
  1402  0002E8  0012               	return		;indir
  1403  0002EA                     i2u2_49:
  1404  0002EA                     i2l40:
  1405  0002EA  0012               	return		;funcret
  1406  0002EC                     __end_of_TMR0_ISR:
  1407                           	callstack 0
  1408                           
  1409 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  1410 ;; Defined at:
  1411 ;;		line 160 in file "mcc_generated_files/tmr0.c"
  1412 ;; Parameters:    Size  Location     Type
  1413 ;;		None
  1414 ;; Auto vars:     Size  Location     Type
  1415 ;;		None
  1416 ;; Return value:  Size  Location     Type
  1417 ;;                  1    wreg      void 
  1418 ;; Registers used:
  1419 ;;		None
  1420 ;; Tracked objects:
  1421 ;;		On entry : 0/0
  1422 ;;		On exit  : 0/0
  1423 ;;		Unchanged: 0/0
  1424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1425 ;;      Params:         0       0       0       0       0       0       0       0       0
  1426 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1427 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1428 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1429 ;;Total ram usage:        0 bytes
  1430 ;; Hardware stack levels used:    1
  1431 ;; This function calls:
  1432 ;;		Nothing
  1433 ;; This function is called by:
  1434 ;;		_TMR0_Initialize
  1435 ;;		_TMR0_ISR
  1436 ;; This function uses a non-reentrant model
  1437 ;;
  1438                           
  1439                           	psect	text15
  1440  0003AE                     __ptext15:
  1441                           	callstack 0
  1442  0003AE                     _TMR0_DefaultInterruptHandler:
  1443                           	callstack 25
  1444  0003AE  0012               	return		;funcret
  1445  0003B0                     __end_of_TMR0_DefaultInterruptHandler:
  1446                           	callstack 0
  1447  0000                     
  1448                           	psect	text16
  1449  000000                     __ptext16:
  1450                           	callstack 0
  1451  000000                     
  1452                           	psect	rparam
  1453  0000                     
  1454                           	psect	temp
  1455  000014                     btemp:
  1456                           	callstack 0
  1457  000014                     	ds	1
  1458  0000                     int$flags	set	btemp
  1459  0000                     wtemp8	set	btemp+1
  1460  0000                     ttemp5	set	btemp+1
  1461  0000                     ttemp6	set	btemp+4
  1462  0000                     ttemp7	set	btemp+8
  1463                           
  1464                           	psect	idloc
  1465                           
  1466                           ;Config register IDLOC0 @ 0x200000
  1467                           ;	unspecified, using default values
  1468  200000                     	org	2097152
  1469  200000  FF                 	db	255
  1470                           
  1471                           ;Config register IDLOC1 @ 0x200001
  1472                           ;	unspecified, using default values
  1473  200001                     	org	2097153
  1474  200001  FF                 	db	255
  1475                           
  1476                           ;Config register IDLOC2 @ 0x200002
  1477                           ;	unspecified, using default values
  1478  200002                     	org	2097154
  1479  200002  FF                 	db	255
  1480                           
  1481                           ;Config register IDLOC3 @ 0x200003
  1482                           ;	unspecified, using default values
  1483  200003                     	org	2097155
  1484  200003  FF                 	db	255
  1485                           
  1486                           ;Config register IDLOC4 @ 0x200004
  1487                           ;	unspecified, using default values
  1488  200004                     	org	2097156
  1489  200004  FF                 	db	255
  1490                           
  1491                           ;Config register IDLOC5 @ 0x200005
  1492                           ;	unspecified, using default values
  1493  200005                     	org	2097157
  1494  200005  FF                 	db	255
  1495                           
  1496                           ;Config register IDLOC6 @ 0x200006
  1497                           ;	unspecified, using default values
  1498  200006                     	org	2097158
  1499  200006  FF                 	db	255
  1500                           
  1501                           ;Config register IDLOC7 @ 0x200007
  1502                           ;	unspecified, using default values
  1503  200007                     	org	2097159
  1504  200007  FF                 	db	255
  1505                           
  1506                           	psect	config
  1507                           
  1508                           ;Config register CONFIG1L @ 0x300000
  1509                           ;	PLL Selection
  1510                           ;	PLLSEL = PLL4X, 4x clock multiplier
  1511                           ;	PLL Enable Configuration bit
  1512                           ;	CFGPLLEN = OFF, PLL Disabled (firmware controlled)
  1513                           ;	CPU System Clock Postscaler
  1514                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
  1515                           ;	Low Speed USB mode with 48 MHz system clock
  1516                           ;	LS48MHZ = SYS24X4, System clock at 24 MHz, USB clock divider is set to 4
  1517  300000                     	org	3145728
  1518  300000  00                 	db	0
  1519                           
  1520                           ;Config register CONFIG1H @ 0x300001
  1521                           ;	Oscillator Selection
  1522                           ;	FOSC = INTOSCIO, Internal oscillator
  1523                           ;	Primary Oscillator Shutdown
  1524                           ;	PCLKEN = ON, Primary oscillator enabled
  1525                           ;	Fail-Safe Clock Monitor
  1526                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1527                           ;	Internal/External Oscillator Switchover
  1528                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1529  300001                     	org	3145729
  1530  300001  28                 	db	40
  1531                           
  1532                           ;Config register CONFIG2L @ 0x300002
  1533                           ;	Power-up Timer Enable
  1534                           ;	nPWRTEN = OFF, Power up timer disabled
  1535                           ;	Brown-out Reset Enable
  1536                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
  1537                           ;	Brown-out Reset Voltage
  1538                           ;	BORV = 190, BOR set to 1.9V nominal
  1539                           ;	Low-Power Brown-out Reset
  1540                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
  1541  300002                     	org	3145730
  1542  300002  5F                 	db	95
  1543                           
  1544                           ;Config register CONFIG2H @ 0x300003
  1545                           ;	Watchdog Timer Enable bits
  1546                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  1547                           ;	Watchdog Timer Postscaler
  1548                           ;	WDTPS = 32768, 1:32768
  1549  300003                     	org	3145731
  1550  300003  3C                 	db	60
  1551                           
  1552                           ; Padding undefined space
  1553  300004                     	org	3145732
  1554  300004  FF                 	db	255
  1555                           
  1556                           ;Config register CONFIG3H @ 0x300005
  1557                           ;	CCP2 MUX bit
  1558                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  1559                           ;	PORTB A/D Enable bit
  1560                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  1561                           ;	Timer3 Clock Input MUX bit
  1562                           ;	T3CMX = RC0, T3CKI function is on RC0
  1563                           ;	SDO Output MUX bit
  1564                           ;	SDOMX = RB3, SDO function is on RB3
  1565                           ;	Master Clear Reset Pin Enable
  1566                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
  1567  300005                     	org	3145733
  1568  300005  D3                 	db	211
  1569                           
  1570                           ;Config register CONFIG4L @ 0x300006
  1571                           ;	Stack Full/Underflow Reset
  1572                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1573                           ;	Single-Supply ICSP Enable bit
  1574                           ;	LVP = OFF, Single-Supply ICSP disabled
  1575                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  1576                           ;	ICPRT = OFF, ICPORT disabled
  1577                           ;	Extended Instruction Set Enable bit
  1578                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
  1579                           ;	Background Debugger Enable bit
  1580                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  1581  300006                     	org	3145734
  1582  300006  81                 	db	129
  1583                           
  1584                           ; Padding undefined space
  1585  300007                     	org	3145735
  1586  300007  FF                 	db	255
  1587                           
  1588                           ;Config register CONFIG5L @ 0x300008
  1589                           ;	Block 0 Code Protect
  1590                           ;	CP0 = OFF, Block 0 is not code-protected
  1591                           ;	Block 1 Code Protect
  1592                           ;	CP1 = OFF, Block 1 is not code-protected
  1593                           ;	Block 2 Code Protect
  1594                           ;	CP2 = OFF, Block 2 is not code-protected
  1595                           ;	Block 3 Code Protect
  1596                           ;	CP3 = OFF, Block 3 is not code-protected
  1597  300008                     	org	3145736
  1598  300008  0F                 	db	15
  1599                           
  1600                           ;Config register CONFIG5H @ 0x300009
  1601                           ;	Boot Block Code Protect
  1602                           ;	CPB = OFF, Boot block is not code-protected
  1603                           ;	Data EEPROM Code Protect
  1604                           ;	CPD = OFF, Data EEPROM is not code-protected
  1605  300009                     	org	3145737
  1606  300009  C0                 	db	192
  1607                           
  1608                           ;Config register CONFIG6L @ 0x30000A
  1609                           ;	Block 0 Write Protect
  1610                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
  1611                           ;	Block 1 Write Protect
  1612                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
  1613                           ;	Block 2 Write Protect
  1614                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
  1615                           ;	Block 3 Write Protect
  1616                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
  1617  30000A                     	org	3145738
  1618  30000A  0F                 	db	15
  1619                           
  1620                           ;Config register CONFIG6H @ 0x30000B
  1621                           ;	Configuration Registers Write Protect
  1622                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1623                           ;	Boot Block Write Protect
  1624                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
  1625                           ;	Data EEPROM Write Protect
  1626                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1627  30000B                     	org	3145739
  1628  30000B  E0                 	db	224
  1629                           
  1630                           ;Config register CONFIG7L @ 0x30000C
  1631                           ;	Block 0 Table Read Protect
  1632                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
  1633                           ;	Block 1 Table Read Protect
  1634                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
  1635                           ;	Block 2 Table Read Protect
  1636                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
  1637                           ;	Block 3 Table Read Protect
  1638                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
  1639  30000C                     	org	3145740
  1640  30000C  0F                 	db	15
  1641                           
  1642                           ;Config register CONFIG7H @ 0x30000D
  1643                           ;	Boot Block Table Read Protect
  1644                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
  1645  30000D                     	org	3145741
  1646  30000D  40                 	db	64
  1647                           tosu	equ	0xFFF
  1648                           tosh	equ	0xFFE
  1649                           tosl	equ	0xFFD
  1650                           stkptr	equ	0xFFC
  1651                           pclatu	equ	0xFFB
  1652                           pclath	equ	0xFFA
  1653                           pcl	equ	0xFF9
  1654                           tblptru	equ	0xFF8
  1655                           tblptrh	equ	0xFF7
  1656                           tblptrl	equ	0xFF6
  1657                           tablat	equ	0xFF5
  1658                           prodh	equ	0xFF4
  1659                           prodl	equ	0xFF3
  1660                           indf0	equ	0xFEF
  1661                           postinc0	equ	0xFEE
  1662                           postdec0	equ	0xFED
  1663                           preinc0	equ	0xFEC
  1664                           plusw0	equ	0xFEB
  1665                           fsr0h	equ	0xFEA
  1666                           fsr0l	equ	0xFE9
  1667                           wreg	equ	0xFE8
  1668                           indf1	equ	0xFE7
  1669                           postinc1	equ	0xFE6
  1670                           postdec1	equ	0xFE5
  1671                           preinc1	equ	0xFE4
  1672                           plusw1	equ	0xFE3
  1673                           fsr1h	equ	0xFE2
  1674                           fsr1l	equ	0xFE1
  1675                           bsr	equ	0xFE0
  1676                           indf2	equ	0xFDF
  1677                           postinc2	equ	0xFDE
  1678                           postdec2	equ	0xFDD
  1679                           preinc2	equ	0xFDC
  1680                           plusw2	equ	0xFDB
  1681                           fsr2h	equ	0xFDA
  1682                           fsr2l	equ	0xFD9
  1683                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     15      19
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _main->_enable_display_decenas
    _enable_display_decenas->_TMR0_ReadTimer
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     502
                                             11 COMRAM     4     4      0
                  _SYSTEM_Initialize
                        _TMR0_Reload
                    _display_decenas
                   _display_unidades
             _enable_display_decenas
 ---------------------------------------------------------------------------------
 (1) _enable_display_decenas                               1     1      0      72
                                             10 COMRAM     1     1      0
                     _TMR0_ReadTimer
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (2) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_ReadTimer                                       8     6      2      69
                                              2 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (1) _display_unidades                                     4     2      2      98
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _display_decenas                                      4     2      2      98
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _TMR0_Reload                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      98
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0      98
                                              4 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           2     2      0       0
                                              0 COMRAM     2     2      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _TMR0_Reload
   _display_decenas
   _display_unidades
   _enable_display_decenas
     _TMR0_ReadTimer
     _TMR0_StartTimer

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E      F      13       1       20.2%
STACK                0      0       0       2        0.0%
DATA                 0      0      13       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
ABS                  0      0      13       6        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Tue Sep 08 23:21:58 2020

                                      l21 0320                                        l30 035E  
                                      l24 03A8                                        l43 03A4  
                                      l36 039A                                        l65 0370  
                                      l68 0382                           _timer0ReloadVal 0010  
                                     l107 02B2                                       l119 03AC  
                                     l161 0102                                       l146 0340  
                                     l182 024C                                       l176 01C4  
                                     l188 0266                                       l901 02B0  
                                     l903 0372                                       l905 0392  
                                     l907 0396                                       l885 03A6  
                                     l895 03AA                                       l897 0270  
                                     l899 0288                                       u100 0340  
                                     u101 033C                                       u110 01D8  
                                     u111 01D4                                       u120 0228  
                                     u121 0224                                       u130 0248  
                                     u131 0244                                       u140 025A  
                                     u141 0256                                       tosl 000FFD  
                 __end_of_display_decenas 01C6                                      l1101 034A  
                                    l1111 0368                                      l1103 0356  
                                    l1113 036C                                      l1121 032A  
                                    l1107 0360                                      l1131 0056  
                                    l1123 0340                                      l1115 0322  
                                    l1211 0228                                      l1203 01F4  
                                    l1109 0364                                      l1141 007E  
                                    l1133 005E                                      l1125 0042  
                                    l1117 0322                                      l1213 022C  
                                    l1205 0204                                      l1143 0086  
                                    l1135 0066                                      l1127 0046  
                                    l1119 032A                                      l1215 025A  
                                    l1207 0208                                      l1161 0118  
                                    l1145 008E                                      l1137 006E  
                                    l1129 004E                                      l1209 020C  
                                    l1083 039C                                      l1091 030C  
                                    l1171 0140                                      l1163 0120  
                                    l1155 0104                                      l1139 0076  
                                    l1093 030E                                      l1085 02EC  
                                    l1173 0148                                      l1165 0128  
                                    l1157 0108                                      l1149 0096  
                                    l1095 0310                                      l1087 02EE  
                                    l1175 0150                                      l1167 0130  
                                    l1159 0110                                      l1097 031C  
                                    l1089 02F6                                      l1169 0138  
                                    l1257 00AC                                      l1185 01C6  
                                    l1259 016E                                      l1179 0158  
                                    l1099 0342                                      l1195 01E0  
                                    l1187 01CA                                      l1197 01EC  
                                    l1189 01D8                                      _LATA 000F89  
                                    _LATB 000F8A                                      _LATC 000F8B  
                                    _LATD 000F8C                                      _LATE 000F8D  
                                    i2l40 02EA                                      i2l46 03AE  
          __end_of_enable_display_decenas 0342                                      _WPUB 000F85  
                                    _main 01C6                           _TMR0_StartTimer 03A6  
                                    btemp 0014                                      start 003E  
                            ___param_bank 000000                   __end_of_TMR0_Initialize 0322  
          ??_TMR0_DefaultInterruptHandler 0001            __size_of_OSCILLATOR_Initialize 0012  
           __end_of_OSCILLATOR_Initialize 0384                                     ?_main 0001  
               TMR0_ReadTimer@readValHigh 000A                                     _T0CON 000FD5  
                                   i2l126 0032                                     i2l911 02B6  
                                   i2l913 02BA                                     i2l915 02BE  
                                   i2l917 02D0                                     i2l909 02B4  
                                   _TMR0H 000FD7                                     _TMR0L 000FD6  
                                   _PORTB 000F81                                     _PORTD 000F83  
                                   _TRISA 000F92                                     _TRISB 000F93  
                                   _TRISC 000F94                                     _TRISD 000F95  
                                   _TRISE 000F96         __size_of_TMR0_SetInterruptHandler 000A  
               ?_TMR0_SetInterruptHandler 0003                          __end_of_TMR0_ISR 02EC  
                                   main@i 000E                                     main@j 000C  
                                   pclath 000FFA                  __end_of_display_unidades 0104  
                                   ttemp5 0015                                     ttemp6 0018  
                                   ttemp7 001C                                     status 000FD8  
                                   wtemp8 0015                           __initialization 0384  
                            __end_of_main 0270               ?_INTERRUPT_InterruptManager 0001  
                                  ??_main 000C                             __activetblptr 000002  
                        ?_display_decenas 0003                   __end_of_TMR0_StartTimer 03AA  
                                  _ACTCON 000FB5                                    _ANSELA 000F5B  
                                  _ANSELB 000F5C                                    _ANSELC 000F5D  
                                  _ANSELD 000F5E                                    _ANSELE 000F5F  
                                  i2l1005 0012                                    i2l1007 0020  
                                  i2l1009 002E                                    _OSCCON 000FD3  
                                  i2u1_40 02D0                                    i2u1_41 02CC  
                                  i2u2_48 02D6                                    i2u2_49 02EA  
                                  i2u4_40 0020                                    i2u4_41 001C  
                                  i2u5_40 002E                                    i2u5_41 002A  
                            ?_TMR0_Reload 0001                          ?_TMR0_Initialize 0001  
                    display_decenas@valor 0003                                    tblptru 000FF8  
TMR0_SetInterruptHandler@InterruptHandler 0003             __size_of_INTERRUPT_Initialize 0004  
                       _SYSTEM_Initialize 0360                                __accesstop 0060  
                 __end_of__initialization 0384                        ?_SYSTEM_Initialize 0001  
                           ___rparam_used 000001                            __pcstackCOMRAM 0001  
                     ??_SYSTEM_Initialize 0007                                 ?_TMR0_ISR 0001  
                 __size_of_TMR0_ReadTimer 001E                          ?_TMR0_StartTimer 0001  
               __end_of_SYSTEM_Initialize 0372                                __pnvCOMRAM 0010  
        __end_of_TMR0_SetInterruptHandler 03A6                                ??_TMR0_ISR 0001  
                                 _OSCCON2 000FD2                                   _OSCTUNE 000F9B  
                       ?_display_unidades 0003                        ??_display_unidades 0005  
                                 __Hparam 0000                                   __Lparam 0000  
                    __size_of_TMR0_Reload 000A                                   __pcinit 0384  
                                 __ramtop 0800                                   __ptext0 01C6  
                                 __ptext1 0322                                   __ptext2 03A6  
                                 __ptext3 0342                                   __ptext4 0042  
                                 __ptext5 0104                                   __ptext6 0392  
                                 __ptext7 0360                                   __ptext8 02EC  
                                 __ptext9 039C                                 _T0CONbits 000FD5  
                   _OSCILLATOR_Initialize 0372                  ??_PIN_MANAGER_Initialize 0003  
              __size_of_SYSTEM_Initialize 0012                     display_unidades@valor 0003  
                    end_of_initialization 0384                             __Lmediumconst 0000  
                   TMR0_ReadTimer@readVal 0007                            _TMR0_ReadTimer 0342  
                _TMR0_SetInterruptHandler 039C                                 _PORTCbits 000F82  
                ??_enable_display_decenas 000B                  __size_of_display_decenas 00C2  
                  __end_of_TMR0_ReadTimer 0360              __end_of_INTERRUPT_Initialize 03AE  
                       __size_of_TMR0_ISR 0038                    ?_OSCILLATOR_Initialize 0001  
                     start_initialization 0384                  __size_of_TMR0_Initialize 0036  
         __size_of_PIN_MANAGER_Initialize 0044                           ?_TMR0_ReadTimer 0003  
         __size_of_enable_display_decenas 0020                     _TMR0_InterruptHandler 0012  
                __size_of_TMR0_StartTimer 0004                    _PIN_MANAGER_Initialize 0270  
                               __pintcode 0008                         ??_display_decenas 0005  
               __size_of_display_unidades 00C2              ??_INTERRUPT_InterruptManager 0001  
                    _INTERRUPT_Initialize 03AA                         ??_TMR0_Initialize 0005  
     __size_of_INTERRUPT_InterruptManager 0036                    _enable_display_decenas 0322  
              ??_TMR0_SetInterruptHandler 0005                             ??_TMR0_Reload 0003  
                                _RCONbits 000FD0                                  _TMR0_ISR 02B4  
                TMR0_ReadTimer@readValLow 0009                               _INTCON2bits 000FF1  
                   ?_INTERRUPT_Initialize 0001                                  __Hrparam 0000  
                                __Lrparam 0000                   ??_OSCILLATOR_Initialize 0003  
                       ??_TMR0_StartTimer 0003                       __end_of_TMR0_Reload 039C  
                                __ptext10 0270                                  __ptext11 0372  
                                __ptext12 03AA                                  __ptext14 02B4  
                                __ptext15 03AE                                  __ptext16 0000  
                           __size_of_main 00AA                          ??_TMR0_ReadTimer 0005  
    __end_of_TMR0_DefaultInterruptHandler 03B0     __size_of_TMR0_DefaultInterruptHandler 0002  
            _TMR0_DefaultInterruptHandler 03AE                                  int$flags 0014  
      __end_of_INTERRUPT_InterruptManager 003E                _INTERRUPT_InterruptManager 0008  
                        _display_unidades 0042                                _INTCONbits 000FF2  
                  ??_INTERRUPT_Initialize 0003                                  intlevel2 0000  
                         _display_decenas 0104                   ?_PIN_MANAGER_Initialize 0001  
         fp__TMR0_DefaultInterruptHandler 0000             ?_TMR0_DefaultInterruptHandler 0001  
                             _TMR0_Reload 0392                           _TMR0_Initialize 02EC  
          __end_of_PIN_MANAGER_Initialize 02B4                   ?_enable_display_decenas 0001  
